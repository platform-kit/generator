{"version":3,"sources":["webpack://NetlifyCmsWidgetMap/webpack/universalModuleDefinition","webpack://NetlifyCmsWidgetMap/webpack/bootstrap","webpack://NetlifyCmsWidgetMap/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\",\"umd\":\"react\"}","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/rbush/index.js","webpack://NetlifyCmsWidgetMap/external {\"root\":[\"NetlifyCmsDefaultExports\",\"PropTypes\"],\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\",\"amd\":\"prop-types\",\"umd\":\"prop-types\"}","webpack://NetlifyCmsWidgetMap/external {\"root\":[\"NetlifyCmsDefaultExports\",\"EmotionCore\"],\"commonjs2\":\"@emotion/core\",\"commonjs\":\"@emotion/core\",\"amd\":\"@emotion/core\",\"umd\":\"@emotion/core\"}","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/ol.css?3d99","webpack://NetlifyCmsWidgetMap/external {\"root\":[\"NetlifyCmsUiDefault\"],\"commonjs2\":\"netlify-cms-ui-default\",\"commonjs\":\"netlify-cms-ui-default\",\"amd\":\"netlify-cms-ui-default\",\"umd\":\"netlify-cms-ui-default\"}","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/ol.css","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/css-loader/dist/runtime/api.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/quickselect/quickselect.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/util.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/AssertionError.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/CollectionEventType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/ObjectEventType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/obj.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/events.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/Disposable.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/functions.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/events/Event.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/events/Target.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/events/EventType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/Observable.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/Object.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/Collection.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/MapEvent.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/MapBrowserEvent.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/has.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/MapBrowserEventType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/MapBrowserPointerEvent.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/pointer/EventType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/pointer/EventSource.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/pointer/MouseSource.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/pointer/MsSource.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/pointer/NativeSource.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/pointer/PointerEvent.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/array.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/pointer/TouchSource.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/pointer/PointerEventHandler.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/MapBrowserEventHandler.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/MapEventType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/MapProperty.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/EventType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/TileState.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/asserts.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/structs/PriorityQueue.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/TileQueue.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/tilegrid/common.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/math.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/centerconstraint.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/rotationconstraint.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/ViewHint.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/ViewProperty.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/coordinate.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/easing.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/extent/Corner.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/extent/Relationship.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/extent.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/GeometryType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/GeometryLayout.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/transform.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/sphere.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/proj/Units.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/proj/Projection.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/proj/epsg3857.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/proj/epsg4326.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/proj/projections.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/proj/transforms.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/proj.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/transform.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/Geometry.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/SimpleGeometry.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/area.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/closest.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/deflate.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/inflate.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/simplify.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/LinearRing.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/Point.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/contains.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/interiorpoint.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/segments.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/intersectsextent.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/reverse.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/orient.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/Polygon.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/View.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/resolutionconstraint.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/dom.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/layer/Property.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/layer/Base.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/State.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/layer/Group.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/size.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/PluggableMap.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/control/Control.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/css.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/layer/Layer.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/control/Attribution.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/control/Rotate.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/control/Zoom.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/Kinetic.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/Property.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/Interaction.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/DoubleClickZoom.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/events/condition.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/Pointer.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/DragPan.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/DragRotate.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/Box.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/DragBox.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/DragZoom.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/events/KeyCode.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/KeyboardPan.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/KeyboardZoom.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/MouseWheelZoom.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/PinchRotate.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/PinchZoom.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/reproj/common.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/ImageState.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/ImageCanvas.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/ImageBase.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/LayerType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/layer/VectorRenderType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/Event.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/structs/LRUCache.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/canvas.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/color.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/colorlike.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/VectorContext.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/canvas/Immediate.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/style/IconImageCache.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/Map.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/canvas/Map.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/canvas/Layer.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/Layer.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/canvas/ImageLayer.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/TileRange.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/canvas/TileLayer.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/ReplayGroup.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/ReplayType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/length.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/textpath.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/canvas/Instruction.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/replay.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/canvas/Replay.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/canvas/ImageReplay.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/canvas/LineStringReplay.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/canvas/PolygonReplay.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/straightchunk.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/style/TextPlacement.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/canvas/TextReplay.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/render/canvas/ReplayGroup.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/vector.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/canvas/VectorLayer.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/layer/VectorTileRenderType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/Map.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/control/util.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/Feature.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/format/Feature.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/format/FormatType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/format/JSONFeature.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/GeometryCollection.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/interpolate.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/LineString.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/MultiLineString.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/MultiPoint.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/MultiPolygon.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/flat/center.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/format/GeoJSON.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/geom/Circle.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/style/Image.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/style/Circle.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/style/RegularShape.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/style/Fill.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/style/Stroke.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/style/Style.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/layer/Vector.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/featureloader.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/loadingstrategy.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/Source.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/VectorEventType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/structs/RBush.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/Vector.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/interaction/Draw.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/layer/TileProperty.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/layer/Tile.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/Tile.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/ImageTile.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/tilecoord.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/TileCache.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/reproj.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/reproj/Triangulation.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/reproj/Tile.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/tileurlfunction.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/tilegrid/TileGrid.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/tilegrid.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/Tile.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/TileEventType.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/TileImage.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/OSM.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/XYZ.js","webpack://NetlifyCmsWidgetMap//Users/erquhart/code/gh/erquhart/netlify-cms/node_modules/ol/source/UrlTile.js","webpack://NetlifyCmsWidgetMap/./src/withMapControl.js","webpack://NetlifyCmsWidgetMap/./src/MapPreview.js","webpack://NetlifyCmsWidgetMap/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","toString","useSourceMap","list","map","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","concat","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","_i","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","floor","newRight","util_abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","ol_AssertionError","AssertionError","code","message","split","__proto__","constructor","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","arguments$1","arguments","TypeError","output","ii","obj_clear","getValues","values","obj_isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event","propagationStopped","stopPropagation","preventDefault","events_Event","events_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","ol_Observable","EventTarget","Observable","revision_","changed","getRevision","on","Array","isArray","once","un","ObjectEvent","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","set","opt_silent","unset","Property","CollectionEvent","opt_element","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","array","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","ol_MapEvent","MapEvent","opt_frameState","frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","document","createElement","getContext","setLineDash","e","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","x","clientX","y","clientY","dx","abs","dy","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","linearFindNearest","direction","reverseSubArray","begin","end","extension","equals","arr1","arr2","len1","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","i$1","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","lerp","none","center","disable","rotation","delta","rotationconstraint_none","ViewHint","ViewProperty","add","coordinate_rotate","angle","cosAngle","cos","sinAngle","sin","coordinate_scale","scale","coordinate_squaredDistance","coord1","coord2","easeIn","easeOut","inAndOut","linear","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","extent_clone","closestSquaredDistanceXY","containsCoordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getCorner","corner","getForViewAndSize","resolution","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","extent_applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","proj_getTransform","proj_transform","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","sx","sy","dx2","dy2","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","clone","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","anchor","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","transform_translate","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","ret","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","coordinate1","coordinate2","coordinate_equals","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","properties","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getCenter","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","parseInt","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base","BaseLayer","opacity","visible","zIndex","state_","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","style","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","hasArea","layerStatesArray","layerStates","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","cache","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","renderEvent","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_render","rotation_","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","ACTIVE","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","zoomByDelta","zoomWithoutConstraints","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","onBoxEnd","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragBox","DragZoom","box_","minArea_","onBoxEnd_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","ERROR_THRESHOLD","ImageState","ol_ImageCanvas","ImageBase","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","err","getImage","getPixelRatio","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","context","glContext","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","prune","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","measureTextHeight","body","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","h","alpha","globalAlpha","setTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","cacheSize","normalize","g","asColorLike","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","expireIconCache","sortByZIndex","state1","state2","layerRendererConstructors","canvas_Map","MapRenderer","CanvasMapRenderer","insertBefore","childNodes","getTransform","composeEvent","clearRect","calculateMatrices2D","compareFnc","stableSort","save","viewResolution","layerRenderer","getLayerRenderer","prepareFrame","composeFrame","restore","scheduleRemoveUnusedLayerRenderers","scheduleExpireIconCache","thisArg","thisArg2","numLayers","forEachLayerAtCoordinate","registerLayerRenderers","constructors","ctor","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","mat","det","invert","removeLayerRendererByKey_","translatedCoordinate","projectionExtent","worldWidth","getWrapX","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","getLayer","postCompose","preCompose","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","lineStringLength","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","interiorPoints","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styles","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","canvas_VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","setReplayGroup","found","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","createStyleFunction","setId","Feature_FeatureFormat","dataProjection","defaultFeatureProjection","transformWithOptions","write","transformed","featureProjection","decimals","getReadOptions","readProjection","adaptOptions","getLastExtent","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","FormatType","ARRAY_BUFFER","XML","getObject","parse","format_JSONFeature","FeatureFormat","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geom_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","geom_MultiPoint","appendPoint","getPoint","getPoints","points","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","center_linearRingss","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON_readGeometry","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","Circle_Circle","setCenterAndRadius","getRadius","getRadiusSquared_","setRadius","geom_Circle","Image_ImageStyle","getSnapToPixel","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","setSnapToPixel","style_Circle","RegularShape","CircleStyle","atlasManager","atlasManager_","radius_","ImageStyle","checksums_","hitDetectionCanvas_","origin_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","checksum","Fill","color_","checksum_","setColor","style_Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","Vector_Property","Vector_VectorLayer","VectorLayer","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","setRenderOrder","toFunction","Vector","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","onerror","send","loadFeaturesXhr","addFeatures","loadingstrategy_all","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","VectorEventType","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","structs_RBush","VectorSourceEvent","opt_feature","source_Vector","VectorSource","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","circle","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","TileProperty","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","Triangulation_Triangulation","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","tmpTileCoord","TileGrid_TileGrid","opt_strict","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","ratio","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","TileSourceEvent","TileEventType","defaultTileLoadFunction","imageTile","ATTRIBUTION","source_OSM","OSM","reprojectionErrorThreshold","TileImage","xyzOptions","gridOptions","createXYZ","tileUrlFunction","urls","UrlTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","generateTileUrlFunction_","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","match","exec","startCharCode","stopCharCode","fromCharCode","stop","expandUrl","formatOptions","getDefaultFormat","getDefaultMap","featuresLayer","OSMSource","MapPreview","_ref","external_root_React_commonjs2_react_commonjs_react_amd_react_umd_react_default","external_root_NetlifyCmsUiDefault_commonjs2_netlify_cms_ui_default_commonjs_netlify_cms_ui_default_amd_netlify_cms_ui_default_umd_netlify_cms_ui_default_","propTypes","PropTypes","string","controlComponent","_class","_temp","React","Component","props","super","mapContainer","createRef","componentDidMount","field","onChange","featuresSource","current","draw","writeOptions","core_","_ref2","cx","css","classNameWrapper","_templateObject","olStyles","ref","_defineProperty","isRequired","withMapControl","NetlifyCmsWidgetMap","Widget","opts","_objectSpread","previewComponent"],"mappings":"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","file":"netlify-cms-widget-map.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"), require(\"@emotion/core\"), require(\"netlify-cms-ui-default\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"NetlifyCmsWidgetMap\", [\"react\", \"prop-types\", \"@emotion/core\", \"netlify-cms-ui-default\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NetlifyCmsWidgetMap\"] = factory(require(\"react\"), require(\"prop-types\"), require(\"@emotion/core\"), require(\"netlify-cms-ui-default\"));\n\telse\n\t\troot[\"NetlifyCmsWidgetMap\"] = factory(root[\"React\"], root[\"NetlifyCmsDefaultExports\"][\"PropTypes\"], root[\"NetlifyCmsDefaultExports\"][\"EmotionCore\"], root[\"NetlifyCmsUiDefault\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__5__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","\n        var result = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n}\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \"{\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = \"(\".concat(item[2], \") and (\").concat(mediaQuery, \")\");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot).concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.3';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if ((this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) ||\n              this.renderedRevision != sourceRevision) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ClassNames } from '@emotion/core';\nimport olStyles from 'ol/ol.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Draw from 'ol/interaction/Draw.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport OSMSource from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\n\nconst formatOptions = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857',\n};\nconst getDefaultFormat = () => new GeoJSON(formatOptions);\n\nconst getDefaultMap = (target, featuresLayer) =>\n  new Map({\n    target,\n    layers: [new TileLayer({ source: new OSMSource() }), featuresLayer],\n    view: new View({ center: [0, 0], zoom: 2 }),\n  });\n\nexport default function withMapControl({ getFormat, getMap } = {}) {\n  return class MapControl extends React.Component {\n    static propTypes = {\n      onChange: PropTypes.func.isRequired,\n      field: PropTypes.object.isRequired,\n      value: PropTypes.node,\n    };\n\n    static defaultProps = {\n      value: '',\n    };\n\n    constructor(props) {\n      super(props);\n      this.mapContainer = React.createRef();\n    }\n\n    componentDidMount() {\n      const { field, onChange, value } = this.props;\n      const format = getFormat ? getFormat(field) : getDefaultFormat(field);\n      const features = value ? [format.readFeature(value)] : [];\n\n      const featuresSource = new VectorSource({ features, wrapX: false });\n      const featuresLayer = new VectorLayer({ source: featuresSource });\n\n      const target = this.mapContainer.current;\n      const map = getMap ? getMap(target, featuresLayer) : getDefaultMap(target, featuresLayer);\n      if (features.length > 0) {\n        map.getView().fit(featuresSource.getExtent(), { maxZoom: 16, padding: [80, 80, 80, 80] });\n      }\n\n      const draw = new Draw({ source: featuresSource, type: field.get('type', 'Point') });\n      map.addInteraction(draw);\n\n      const writeOptions = { decimals: field.get('decimals', 7) };\n      draw.on('drawend', ({ feature }) => {\n        featuresSource.clear();\n        onChange(format.writeGeometry(feature.getGeometry(), writeOptions));\n      });\n    }\n\n    render() {\n      return (\n        <ClassNames>\n          {({ cx, css }) => (\n            <div\n              className={cx(\n                this.props.classNameWrapper,\n                css`\n                  ${olStyles};\n                  padding: 0;\n                  overflow: hidden;\n                `,\n              )}\n              ref={this.mapContainer}\n            />\n          )}\n        </ClassNames>\n      );\n    }\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { WidgetPreviewContainer } from 'netlify-cms-ui-default';\n\nconst MapPreview = ({ value }) => (\n  <WidgetPreviewContainer>{value ? value.toString() : null}</WidgetPreviewContainer>\n);\n\nMapPreview.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default MapPreview;\n","import withMapControl from './withMapControl';\nimport previewComponent from './MapPreview';\n\nconst controlComponent = withMapControl();\nconst Widget = (opts = {}) => ({\n  name: 'map',\n  controlComponent,\n  previewComponent,\n  ...opts,\n});\n\nexport const NetlifyCmsWidgetMap = { Widget, controlComponent, previewComponent };\nexport default NetlifyCmsWidgetMap;\n"],"sourceRoot":""}