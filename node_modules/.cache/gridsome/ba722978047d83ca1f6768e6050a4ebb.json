{"remainingRequest":"/Users/jameshuntercarter/htdocs/generator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jameshuntercarter/htdocs/generator/src/pages/Recent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jameshuntercarter/htdocs/generator/src/pages/Recent.vue","mtime":1585724032882},{"path":"/Users/jameshuntercarter/htdocs/generator/node_modules/cache-loader/dist/cjs.js","mtime":1585724025413},{"path":"/Users/jameshuntercarter/htdocs/generator/node_modules/babel-loader/lib/index.js","mtime":1585724025112},{"path":"/Users/jameshuntercarter/htdocs/generator/node_modules/cache-loader/dist/cjs.js","mtime":1585724025413},{"path":"/Users/jameshuntercarter/htdocs/generator/node_modules/vue-loader/lib/index.js","mtime":1585724032637}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  metaInfo: {\n    title: \"Recent Activity\"\n  },\n  data() {\n    return {\n      window: null\n    };\n  },\n  async mounted() {\n    try {\n      this.window = window;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  methods: {\n    getImageUrl(node) {\n      var result = null;\n      if (node.thumbnail_image != null) {\n        result = node.thumbnail_image;\n      }\n      if (result == null) {\n        if (node.cover_image != null) {\n          result = node.cover_image;\n        }\n      }\n      return result;\n    }\n  }\n};\n",{"version":3,"sources":["Recent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Recent.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <Layout :show-logo=\"false\">\n    <div class=\"container py-3\">\n      <div class=\"row w-100 justify-content-center text-center\">\n        <h2 class=\"p-4 text-weight-200 ml-3\">\n          <a href=\"/\">\n            <img\n              src=\"/images/logo.svg\"\n              style=\"max-width:300px;\"\n              v-on:click=\"window.location.assign(edge.node.link)\"\n              class=\"col-6 mb-4 pb-1 justify-content-center\"\n            />\n          </a>\n          <br />Recent Activity\n        </h2>\n      </div>\n      <div class=\"row justify-content-center mx-auto\" style=\"max-width:330px\">\n        <div\n          v-on:click=\"window.location.assign(edge.node.link)\"\n          class=\"col-4 mx-auto border-light-blue image-grid-square\"\n          v-for=\"edge, index in $page.featuredSocialPosts.edges\"\n          v-bind:key=\"edge.node.id\"\n          :style=\"{ backgroundImage: `url('${getImageUrl(edge.node)}')` }\"\n        >&nbsp;</div>\n      </div>\n    </div>\n  </Layout>\n</template>\n\n<page-query>\nquery {\n  featuredContent: allContentItem(sortBy: \"date\", order: DESC, filter: { published: { eq: true }, featured: { eq: true }}) {\n    edges {\n      node {\n        id\n        title\n        slug\n        date (format: \"D. MMMM YYYY\")        \n        featured        \n        description\n        cover_image\n        thumbnail_image\n        path\n        tags {\n          id\n          title\n          path\n        }\n      }\n    }\n  }\n  featuredSocialPosts: allSocialPost(sortBy: \"date\", order: DESC, filter: { published: { eq: true }, featured: { eq: true }}) {\n    edges {\n      node {\n        id\n        title\n        date\n        link        \n        featured        \n        description        \n        thumbnail_image\n        path        \n      }\n    }\n  }       \n}\n</page-query>\n\n<script>\nexport default {\n  metaInfo: {\n    title: \"Recent Activity\"\n  },\n  data() {\n    return {\n      window: null\n    };\n  },\n  async mounted() {\n    try {\n      this.window = window;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  methods: {\n    getImageUrl(node) {\n      var result = null;\n      if (node.thumbnail_image != null) {\n        result = node.thumbnail_image;\n      }\n      if (result == null) {\n        if (node.cover_image != null) {\n          result = node.cover_image;\n        }\n      }\n      return result;\n    }\n  }\n};\n</script>\n\n<style scoped>\n#inline-search {\n  max-width: 300px;\n  border-radius: 25px;\n}\n.image-grid-square {\n  background-color: #eee;\n  border-radius: 3px;\n  min-height: 100px !important;\n  max-width: 100px !important;\n  background-position: center;\n  background-size: cover;\n  float: left;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n</style>"]}]}