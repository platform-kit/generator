"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reopenPullRequest = exports.createBranchAndPullRequest = exports.createBranch = exports.createPullRequest = exports.closePullRequestAndDeleteBranch = exports.closePullRequest = exports.deleteBranch = exports.updateBranch = void 0;

var _graphqlTag = _interopRequireDefault(require("graphql-tag"));

var fragments = _interopRequireWildcard(require("./fragments"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject8() {
  const data = _taggedTemplateLiteral(["\n  mutation reopenPullRequest($reopenPullRequestInput: ReopenPullRequestInput!) {\n    reopenPullRequest(input: $reopenPullRequestInput) {\n      clientMutationId\n      pullRequest {\n        ...PullRequestParts\n      }\n    }\n  }\n  ", "\n"]);

  _templateObject8 = function () {
    return data;
  };

  return data;
}

function _templateObject7() {
  const data = _taggedTemplateLiteral(["\n  mutation createBranchAndPullRequest(\n    $createRefInput: CreateRefInput!\n    $createPullRequestInput: CreatePullRequestInput!\n  ) {\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n    ", "\n  }\n  ", "\n  ", "\n"]);

  _templateObject7 = function () {
    return data;
  };

  return data;
}

function _templateObject6() {
  const data = _taggedTemplateLiteral(["\n  mutation createBranch($createRefInput: CreateRefInput!) {\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n  }\n  ", "\n"]);

  _templateObject6 = function () {
    return data;
  };

  return data;
}

function _templateObject5() {
  const data = _taggedTemplateLiteral(["\n  mutation createPullRequest($createPullRequestInput: CreatePullRequestInput!) {\n    ", "\n  }\n  ", "\n"]);

  _templateObject5 = function () {
    return data;
  };

  return data;
}

function _templateObject4() {
  const data = _taggedTemplateLiteral(["\n  mutation closePullRequestAndDeleteBranch(\n    $closePullRequestInput: ClosePullRequestInput!\n    $deleteRefInput: DeleteRefInput!\n  ) {\n    ", "\n    ", "\n  }\n  ", "\n"]);

  _templateObject4 = function () {
    return data;
  };

  return data;
}

function _templateObject3() {
  const data = _taggedTemplateLiteral(["\n  mutation closePullRequestAndDeleteBranch($closePullRequestInput: ClosePullRequestInput!) {\n    ", "\n  }\n  ", "\n"]);

  _templateObject3 = function () {
    return data;
  };

  return data;
}

function _templateObject2() {
  const data = _taggedTemplateLiteral(["\n  mutation deleteRef($deleteRefInput: DeleteRefInput!) {\n    ", "\n  }\n"]);

  _templateObject2 = function () {
    return data;
  };

  return data;
}

function _templateObject() {
  const data = _taggedTemplateLiteral(["\n  mutation updateRef($input: UpdateRefInput!) {\n    updateRef(input: $input) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n  }\n  ", "\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

// updateRef only works for branches at the moment
const updateBranch = (0, _graphqlTag.default)(_templateObject(), fragments.branch); // deleteRef only works for branches at the moment

exports.updateBranch = updateBranch;
const deleteRefMutationPart = "\ndeleteRef(input: $deleteRefInput) {\n  clientMutationId\n}\n";
const deleteBranch = (0, _graphqlTag.default)(_templateObject2(), deleteRefMutationPart);
exports.deleteBranch = deleteBranch;
const closePullRequestMutationPart = "\nclosePullRequest(input: $closePullRequestInput) {\n  clientMutationId\n  pullRequest {\n    ...PullRequestParts\n  }\n}\n";
const closePullRequest = (0, _graphqlTag.default)(_templateObject3(), closePullRequestMutationPart, fragments.pullRequest);
exports.closePullRequest = closePullRequest;
const closePullRequestAndDeleteBranch = (0, _graphqlTag.default)(_templateObject4(), closePullRequestMutationPart, deleteRefMutationPart, fragments.pullRequest);
exports.closePullRequestAndDeleteBranch = closePullRequestAndDeleteBranch;
const createPullRequestMutationPart = "\n createPullRequest(input: $createPullRequestInput) {\n  clientMutationId\n  pullRequest {\n    ...PullRequestParts\n  }\n}\n ";
const createPullRequest = (0, _graphqlTag.default)(_templateObject5(), createPullRequestMutationPart, fragments.pullRequest);
exports.createPullRequest = createPullRequest;
const createBranch = (0, _graphqlTag.default)(_templateObject6(), fragments.branch); // createRef only works for branches at the moment

exports.createBranch = createBranch;
const createBranchAndPullRequest = (0, _graphqlTag.default)(_templateObject7(), createPullRequestMutationPart, fragments.branch, fragments.pullRequest);
exports.createBranchAndPullRequest = createBranchAndPullRequest;
const reopenPullRequest = (0, _graphqlTag.default)(_templateObject8(), fragments.pullRequest);
exports.reopenPullRequest = reopenPullRequest;