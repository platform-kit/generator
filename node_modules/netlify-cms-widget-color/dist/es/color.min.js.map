{"version":3,"file":"color.min.js","sources":["../../src/Control.js","../../src/index.js"],"sourcesContent":["import React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { SketchPicker } from '@pake/react-color';\n\nconst DEFAULT_FORMAT = 'hex';\nconst DEFAULT_COLOR = '#ffffff';\n\nexport default createReactClass({\n  propTypes: {\n    onChange: PropTypes.func.isRequired,\n    forID: PropTypes.string.isRequired,\n    value: PropTypes.node,\n    setActiveStyle: PropTypes.func.isRequired,\n    setInactiveStyle: PropTypes.func.isRequired,\n    classNameWrapper: PropTypes.string.isRequired,\n    field: ImmutablePropTypes.mapContains({\n      format: PropTypes.oneOf(['hex', 'rgb', 'hsl']),\n      default: PropTypes.string,\n      presets: ImmutablePropTypes.list,\n      alpha: PropTypes.bool,\n    }).isRequired,\n  },\n\n  getDefaultProps() {\n    return {\n      value: '',\n    };\n  },\n\n  getInitialState() {\n    return {\n      displayColorPicker: false,\n    };\n  },\n\n  handleChangeComplete(color) {\n    const { field, onChange } = this.props;\n    const alpha = !field.get('alpha', true);\n    const format = field.get('format') || DEFAULT_FORMAT;\n    let selected = color[format];\n    if (typeof selected !== 'string') {\n      const type = `${format}${alpha ? 'a' : ''}`;\n      const value = Object.values(selected).join(', ');\n\n      selected = `${type}(${value})`;\n    }\n    onChange(selected);\n  },\n\n  handleClick() {\n    const { displayColorPicker } = this.state;\n    this.setState({ displayColorPicker: !displayColorPicker });\n  },\n\n  handleClose() {\n    this.setState({ displayColorPicker: false });\n  },\n\n  render() {\n    const {\n      forID,\n      field,\n      value,\n      classNameWrapper,\n      setActiveStyle,\n      setInactiveStyle,\n    } = this.props;\n\n    const props = {\n      presetColors: undefined,\n      color: value || field.get('default') || DEFAULT_COLOR,\n      disableAlpha: !field.get('alpha', true),\n    };\n\n    if (field.has('presets')) {\n      props.presetColors = field.get('presets').toArray();\n    }\n\n    const { displayColorPicker } = this.state;\n    const styles = {\n      color: {\n        width: '30px',\n        height: '30px',\n        borderRadius: '50%',\n        background: props.color,\n        float: 'left',\n        marginRight: '10px',\n      },\n      swatch: {\n        minWidth: '120px',\n        padding: '8px',\n        background: '#ffffff',\n        display: 'inline-block',\n        cursor: 'pointer',\n        borderRadius: '25px',\n        textAlign: 'left',\n      },\n      hex: {\n        verticalAlign: 'middle',\n        lineHeight: '30px',\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2',\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n      },\n    };\n\n    return (\n      <div\n        id={forID}\n        className={classNameWrapper}\n        onFocus={setActiveStyle}\n        onBlur={setInactiveStyle}\n      >\n        <button style={styles.swatch} onClick={this.handleClick} type=\"button\">\n          <div style={styles.color} />\n          <span style={styles.hex}>\n            {props.color}\n          </span>\n        </button>\n        {displayColorPicker\n          ? (\n            <div style={styles.popover}>\n              <div tabIndex={0} role=\"button\" style={styles.cover} onClick={this.handleClose} onKeyPress={this.handleClose} />\n              <SketchPicker\n                onChangeComplete={this.handleChangeComplete}\n                {...props}\n              />\n            </div>\n          ) : null}\n      </div>\n    );\n  },\n});\n","import Control from './Control';\n\nexport default {\n  Control,\n};\n"],"names":["DEFAULT_FORMAT","DEFAULT_COLOR","createReactClass","propTypes","onChange","PropTypes","func","isRequired","forID","string","value","node","setActiveStyle","setInactiveStyle","classNameWrapper","field","ImmutablePropTypes","mapContains","format","oneOf","default","presets","list","alpha","bool","getDefaultProps","getInitialState","displayColorPicker","handleChangeComplete","color","this","props","get","selected","type","Object","values","join","handleClick","state","setState","handleClose","render","presetColors","undefined","disableAlpha","has","toArray","styles","width","height","borderRadius","background","float","marginRight","swatch","minWidth","padding","display","cursor","textAlign","hex","verticalAlign","lineHeight","popover","position","zIndex","cover","top","right","bottom","left","React","id","className","onFocus","onBlur","style","onClick","tabIndex","role","onKeyPress","SketchPicker","onChangeComplete","Control"],"mappings":"+aAMA,IAAMA,eAAiB,MACjBC,cAAgB,kBAEPC,iBAAiB,uBAC9BC,UAAW,CACTC,SAAUC,UAAUC,KAAKC,WACzBC,MAAOH,UAAUI,OAAOF,WACxBG,MAAOL,UAAUM,KACjBC,eAAgBP,UAAUC,KAAKC,WAC/BM,iBAAkBR,UAAUC,KAAKC,WACjCO,iBAAkBT,UAAUI,OAAOF,WACnCQ,MAAOC,mBAAmBC,YAAY,CACpCC,OAAQb,UAAUc,MAAM,CAAC,MAAO,MAAO,QACvCC,QAASf,UAAUI,OACnBY,QAASL,mBAAmBM,KAC5BC,MAAOlB,UAAUmB,OAChBjB,YAGLkB,iCACS,CACLf,MAAO,KAIXgB,iCACS,CACLC,oBAAoB,IAIxBC,8BAAqBC,SACSC,KAAKC,MAAzBhB,IAAAA,MAAOX,IAAAA,SACTmB,GAASR,EAAMiB,IAAI,SAAS,GAC5Bd,EAASH,EAAMiB,IAAI,WAAahC,eAClCiC,EAAWJ,EAAMX,MACG,iBAAbe,EAAuB,KAC1BC,YAAUhB,UAASK,EAAQ,IAAM,IACjCb,EAAQyB,OAAOC,OAAOH,GAAUI,KAAK,MAE3CJ,YAAcC,cAAQxB,OAExBN,EAAS6B,IAGXK,2BACUX,EAAuBG,KAAKS,MAA5BZ,wBACHa,SAAS,CAAEb,oBAAqBA,KAGvCc,4BACOD,SAAS,CAAEb,oBAAoB,KAGtCe,wBAQMZ,KAAKC,MANPvB,IAAAA,MACAO,IAAAA,MACAL,IAAAA,MACAI,IAAAA,iBACAF,IAAAA,eACAC,IAAAA,iBAGIkB,EAAQ,CACZY,kBAAcC,EACdf,MAAOnB,GAASK,EAAMiB,IAAI,YAAc/B,cACxC4C,cAAe9B,EAAMiB,IAAI,SAAS,IAGhCjB,EAAM+B,IAAI,aACZf,EAAMY,aAAe5B,EAAMiB,IAAI,WAAWe,eAGpCpB,EAAuBG,KAAKS,MAA5BZ,mBACFqB,EAAS,CACbnB,MAAO,CACLoB,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,WAAYrB,EAAMF,MAClBwB,MAAO,OACPC,YAAa,QAEfC,OAAQ,CACNC,SAAU,QACVC,QAAS,MACTL,WAAY,UACZM,QAAS,eACTC,OAAQ,UACRR,aAAc,OACdS,UAAW,QAEbC,IAAK,CACHC,cAAe,SACfC,WAAY,QAEdC,QAAS,CACPC,SAAU,WACVC,OAAQ,KAEVC,MAAO,CACLF,SAAU,QACVG,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,eAKRC,2BACEC,GAAIjE,EACJkE,UAAW5D,EACX6D,QAAS/D,EACTgE,OAAQ/D,GAER2D,8BAAQK,MAAO7B,EAAOO,OAAQuB,QAAShD,KAAKQ,YAAaJ,KAAK,UAC5DsC,2BAAKK,MAAO7B,EAAOnB,QACnB2C,4BAAMK,MAAO7B,EAAOa,KACjB9B,EAAMF,QAGVF,EAEG6C,2BAAKK,MAAO7B,EAAOgB,SACjBQ,2BAAKO,SAAU,EAAGC,KAAK,SAASH,MAAO7B,EAAOmB,MAAOW,QAAShD,KAAKW,YAAawC,WAAYnD,KAAKW,cACjG+B,oBAACU,uBACCC,iBAAkBrD,KAAKF,sBACnBG,KAGN,eCxIC,CACbqD,QAAAA"}