{"version":3,"sources":["webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/xml/xml.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/htmlmixed/htmlmixed.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/ruby/ruby.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/slim/slim.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","quote","closure","baseState","tagName","tagStart","test","eol","isInAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","copyState","local","line","innerMode","wordObj","words","o","e","curPunc","keywords","indentWords","dedentWords","opening","closing","newtok","tokenBase","readBlockComment","m","phrase","mayIndent","readQuoted","start","pos","found","escaped","indexOf","regexpAhead","embed","delim","propertyIsEnumerable","skipToEnd","pop","varList","lastTok","more","tokenBaseUntilBrace","peek","tokenBaseOnce","alreadyCalled","unescaped","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","lineComment","fold","rubyMode","modes","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","join","styleMap","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","continueLine","stack","parent","finishContinue","rubyInQuote","endQuote","rubyState","startRubySplat","runSplat","offset","idx","restore","backup","startHtmlLine","lastTokenize","htmlLine","startHtmlMode","comment","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","sub","subStream","StringStream","string","slice","tabSize","lastColumnPos","lastColumnValue","subMode","subState","firstSub","query","factory","createMode","doctypeLine","_state","startLine","commentMode","lineContinuable","startSubMode","slimTag","slim","slimTagExtras","slimClass","slimAttribute","startAttributeWrapperMode","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","nextTokenize","fresh","last","blankLine"],"mappings":"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","file":"13.netlify-cms-widget-code.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n    \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n    \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n    \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n    \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n    \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n  ]);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                             \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\n  var closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n"],"sourceRoot":""}