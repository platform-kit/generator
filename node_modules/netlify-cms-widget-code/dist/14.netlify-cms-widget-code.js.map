{"version":3,"sources":["webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/handlebars/handlebars.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/addon/mode/simple.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/addon/mode/multiplex.js"],"names":["CodeMirror","defineSimpleMode","start","regex","push","token","handlebars_raw","pop","handlebars","dash_comment","comment","meta","blockCommentStart","blockCommentEnd","defineMode","config","parserConfig","getMode","base","multiplexingMode","open","close","mode","parseDelimiters","defineMIME","mod","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","Rule","data","next","this","apply","replace","result","i","length","asToken","tokenFunction","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","endScan","exec","current","index","curState","rule","matches","sol","stack","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","lState","startState","forceEnd","indentFunction","textAfter","line","dontIndentStates","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode","outer","others","Array","prototype","call","arguments","string","pattern","from","returnEnd","found","innerActive","inner","curInner","oldContent","delimStyle","innerToken","innerStyle","cutOff","Infinity","other","outerIndent","possibleOuterIndent","outerToken","blankLine","electricChars"],"mappings":"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","file":"14.netlify-cms-widget-code.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{\\{/, push: \"handlebars_raw\", token: \"tag\" },\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars_raw: [\n      { regex: /\\}\\}\\}/, pop: true, token: \"tag\" },\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: /\\}\\}\\}?/, mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n"],"sourceRoot":""}