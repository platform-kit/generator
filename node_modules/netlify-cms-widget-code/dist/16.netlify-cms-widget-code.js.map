{"version":3,"sources":["webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/xml/xml.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/htmlmixed/htmlmixed.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/soy/soy.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","quote","closure","baseState","tagName","tagStart","test","eol","isInAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","copyState","local","line","innerMode","paramData","noEndTag","soyState","variableScope","reduceIndent","indentingTags","Object","keys","filter","textMode","modes","attributes","uri","trusted_resource_uri","css","js","statementIndent","last","array","tokenUntil","untilRegExp","oldString","string","substr","pos","index","result","hideFirstChars","localStates","prepend","list","element","popcontext","scope","variables","previousContext","kind","templates","scopes","quoteKind","concat","map","loose","pop","skipToEnd","paramRe","peekChar","peek","substring","selfClosed","indexOf","contains","prevTag","indentingTag","tagError","top","lineComment","blockCommentContinue","useInnerComments","fold","registerHelper"],"mappings":"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","file":"16.netlify-cms-widget-code.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"var-def\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"var-def\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          templates: null,\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          templates: state.templates,\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.templates = prepend(state.templates, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (peekChar == \"}\" || peekChar == \"=\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.eatWhile(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag = state.tag[0] == \"/\";\n            var tagName = endTag ? state.tag.substring(1) : state.tag;\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            } else if (match = stream.match(/([\\w]+)(?=\\()/)) {\n              return \"variable callee\";\n            } else if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match;\n              return \"string\";\n            }\n            if (stream.match(/(null|true|false)(?!\\w)/) ||\n              stream.match(/0x([0-9a-fA-F]{2,})/) ||\n              stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n              return \"atom\";\n            }\n            if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n              // Tokenize filter, binary, null propagator, and equality operators.\n              return \"operator\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              return ref(state.variables, match[1]);\n            }\n            if (match = stream.match(/^\\w+/)) {\n              return /^(?:as|and|or|not|in)$/.test(match[0]) ? \"keyword\" : null;\n            }\n            stream.next();\n            return null;\n\n          case \"literal\":\n            if (stream.match(/^(?=\\{\\/literal})/)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n        }\n\n        if (stream.match(/^\\{literal}/)) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              if (!state.context || state.context.tag != tagName) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n"],"sourceRoot":""}