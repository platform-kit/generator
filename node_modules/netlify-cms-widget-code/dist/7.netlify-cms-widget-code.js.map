{"version":3,"sources":["webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/coffeescript/coffeescript.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/handlebars/handlebars.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/sass/sass.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/vue/vue.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/addon/mode/simple.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/addon/mode/overlay.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/addon/mode/multiplex.js"],"names":["CodeMirror","defineMode","conf","parserConf","wordRegexp","words","RegExp","join","operators","delimiters","identifiers","atProp","wordOperators","indentKeywords","keywords","concat","stringPrefixes","regexPrefixes","constants","tokenBase","stream","state","sol","scope","align","scopeOffset","offset","eatSpace","lineOffset","indentation","type","dedent","ch","peek","match","skipToEnd","tokenize","longComment","floatLiteral","backUp","intLiteral","tokenFactory","current","prop","next","delimiter","singleline","outclass","eol","eatWhile","eat","singleLineStringErrors","indent","alignOffset","prev","indentUnit","column","length","_indent","matched","startState","basecolumn","token","fillAlign","style","delimiter_index","indexOf","slice","exec","tokenLexer","text","closer","charAt","closes","lineComment","fold","defineMIME","mod","defineSimpleMode","start","regex","push","handlebars_raw","pop","handlebars","dash_comment","comment","meta","blockCommentStart","blockCommentEnd","config","parserConfig","getMode","base","multiplexingMode","open","close","mode","parseDelimiters","word","cssMode","mimeModes","propertyKeywords","colorKeywords","valueKeywords","fontProperties","keywordsRegexp","opRegexp","pseudoElementsRegexp","isEndLine","urlTokens","tokenizer","buildStringTokenizer","multiLine","skipTo","quote","greedy","stringTokenizer","nextChar","peekChar","previousChar","string","pos","cursorHalf","buildInterpolationTokenizer","currentTokenizer","indentCount","currentOffset","scopes","unshift","shift","toLowerCase","hasOwnProperty","prevProp","definedVars","definedMixins","withCurrentIndent","newScopes","i","lastToken","content","tagLanguages","script","template","overlayMode","backdrop","name","tags","ensureState","states","Error","toRegex","val","caret","flags","ignoreCase","source","String","Rule","data","this","apply","replace","result","asToken","tokenFunction","pending","pend","local","end","tok","endToken","localState","m","endScan","index","curState","rule","matches","stack","enterLocalMode","j","cmp","a","b","props","spec","pers","persistent","p","persistentStates","lState","forceEnd","indentFunction","textAfter","line","dontIndentStates","arr","Pass","rules","scan","dedentIfLineStart","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","combineTokens","electricChars","blankLine","baseToken","overlayToken","outer","others","Array","prototype","call","arguments","pattern","from","returnEnd","found","innerActive","inner","curInner","oldContent","delimStyle","innerToken","innerStyle","cutOff","Infinity","other","outerIndent","possibleOuterIndent","outerToken"],"mappings":"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","file":"7.netlify-cms-widget-code.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/pickhardt/coffeescript-codemirror-mode\n */\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"coffeescript\", function(conf, parserConf) {\n  var ERRORCLASS = \"error\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\n  var delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\n  var identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\n  var atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\",\n                                  \"is\", \"isnt\", \"in\",\n                                  \"instanceof\", \"typeof\"]);\n  var indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\",\n                        \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\n  var commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\",\n                        \"do\", \"in\", \"of\", \"new\", \"return\", \"then\",\n                        \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n\n  var keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n\n  indentKeywords = wordRegexp(indentKeywords);\n\n\n  var stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\n  var regexPrefixes = /^(\\/{3}|\\/)/;\n  var commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\n  var constants = wordRegexp(commonConstants);\n\n  // Tokenizers\n  function tokenBase(stream, state) {\n    // Handle scope changes\n    if (stream.sol()) {\n      if (state.scope.align === null) state.scope.align = false;\n      var scopeOffset = state.scope.offset;\n      if (stream.eatSpace()) {\n        var lineOffset = stream.indentation();\n        if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n          return \"indent\";\n        } else if (lineOffset < scopeOffset) {\n          return \"dedent\";\n        }\n        return null;\n      } else {\n        if (scopeOffset > 0) {\n          dedent(stream, state);\n        }\n      }\n    }\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle docco title comment (single line)\n    if (stream.match(\"####\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle multi line comments\n    if (stream.match(\"###\")) {\n      state.tokenize = longComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Single line comment\n    if (ch === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle number literals\n    if (stream.match(/^-?[0-9\\.]/, false)) {\n      var floatLiteral = false;\n      // Floats\n      if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\d+\\.\\d*/)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\.\\d+/)) {\n        floatLiteral = true;\n      }\n\n      if (floatLiteral) {\n        // prevent from getting extra . on 1..\n        if (stream.peek() == \".\"){\n          stream.backUp(1);\n        }\n        return \"number\";\n      }\n      // Integers\n      var intLiteral = false;\n      // Hex\n      if (stream.match(/^-?0x[0-9a-f]+/i)) {\n        intLiteral = true;\n      }\n      // Decimal\n      if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n        intLiteral = true;\n      }\n      // Zero by itself with no other piece of number.\n      if (stream.match(/^-?0(?![\\dx])/i)) {\n        intLiteral = true;\n      }\n      if (intLiteral) {\n        return \"number\";\n      }\n    }\n\n    // Handle strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenFactory(stream.current(), false, \"string\");\n      return state.tokenize(stream, state);\n    }\n    // Handle regex literals\n    if (stream.match(regexPrefixes)) {\n      if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) { // prevent highlight of division\n        state.tokenize = tokenFactory(stream.current(), true, \"string-2\");\n        return state.tokenize(stream, state);\n      } else {\n        stream.backUp(1);\n      }\n    }\n\n\n\n    // Handle operators and delimiters\n    if (stream.match(operators) || stream.match(wordOperators)) {\n      return \"operator\";\n    }\n    if (stream.match(delimiters)) {\n      return \"punctuation\";\n    }\n\n    if (stream.match(constants)) {\n      return \"atom\";\n    }\n\n    if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n      return \"property\";\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(identifiers)) {\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return ERRORCLASS;\n  }\n\n  function tokenFactory(delimiter, singleline, outclass) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\/\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol()) {\n            return outclass;\n          }\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenBase;\n          return outclass;\n        } else {\n          stream.eat(/['\"\\/]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors) {\n          outclass = ERRORCLASS;\n        } else {\n          state.tokenize = tokenBase;\n        }\n      }\n      return outclass;\n    };\n  }\n\n  function longComment(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^#]/);\n      if (stream.match(\"###\")) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.eatWhile(\"#\");\n    }\n    return \"comment\";\n  }\n\n  function indent(stream, state, type) {\n    type = type || \"coffee\";\n    var offset = 0, align = false, alignOffset = null;\n    for (var scope = state.scope; scope; scope = scope.prev) {\n      if (scope.type === \"coffee\" || scope.type == \"}\") {\n        offset = scope.offset + conf.indentUnit;\n        break;\n      }\n    }\n    if (type !== \"coffee\") {\n      align = null;\n      alignOffset = stream.column() + stream.current().length;\n    } else if (state.scope.align) {\n      state.scope.align = false;\n    }\n    state.scope = {\n      offset: offset,\n      type: type,\n      prev: state.scope,\n      align: align,\n      alignOffset: alignOffset\n    };\n  }\n\n  function dedent(stream, state) {\n    if (!state.scope.prev) return;\n    if (state.scope.type === \"coffee\") {\n      var _indent = stream.indentation();\n      var matched = false;\n      for (var scope = state.scope; scope; scope = scope.prev) {\n        if (_indent === scope.offset) {\n          matched = true;\n          break;\n        }\n      }\n      if (!matched) {\n        return true;\n      }\n      while (state.scope.prev && state.scope.offset !== _indent) {\n        state.scope = state.scope.prev;\n      }\n      return false;\n    } else {\n      state.scope = state.scope.prev;\n      return false;\n    }\n  }\n\n  function tokenLexer(stream, state) {\n    var style = state.tokenize(stream, state);\n    var current = stream.current();\n\n    // Handle scope changes.\n    if (current === \"return\") {\n      state.dedent = true;\n    }\n    if (((current === \"->\" || current === \"=>\") && stream.eol())\n        || style === \"indent\") {\n      indent(stream, state);\n    }\n    var delimiter_index = \"[({\".indexOf(current);\n    if (delimiter_index !== -1) {\n      indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n    }\n    if (indentKeywords.exec(current)){\n      indent(stream, state);\n    }\n    if (current == \"then\"){\n      dedent(stream, state);\n    }\n\n\n    if (style === \"dedent\") {\n      if (dedent(stream, state)) {\n        return ERRORCLASS;\n      }\n    }\n    delimiter_index = \"])}\".indexOf(current);\n    if (delimiter_index !== -1) {\n      while (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      if (state.scope.type == current)\n        state.scope = state.scope.prev;\n    }\n    if (state.dedent && stream.eol()) {\n      if (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      state.dedent = false;\n    }\n\n    return style;\n  }\n\n  var external = {\n    startState: function(basecolumn) {\n      return {\n        tokenize: tokenBase,\n        scope: {offset:basecolumn || 0, type:\"coffee\", prev: null, align: false},\n        prop: false,\n        dedent: 0\n      };\n    },\n\n    token: function(stream, state) {\n      var fillAlign = state.scope.align === null && state.scope;\n      if (fillAlign && stream.sol()) fillAlign.align = false;\n\n      var style = tokenLexer(stream, state);\n      if (style && style != \"comment\") {\n        if (fillAlign) fillAlign.align = true;\n        state.prop = style == \"punctuation\" && stream.current() == \".\"\n      }\n\n      return style;\n    },\n\n    indent: function(state, text) {\n      if (state.tokenize != tokenBase) return 0;\n      var scope = state.scope;\n      var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n      if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n      var closes = closer && scope.type === text.charAt(0);\n      if (scope.align)\n        return scope.alignOffset - (closes ? 1 : 0);\n      else\n        return (closes ? scope.prev : scope).offset;\n    },\n\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\n// IANA registered media type\n// https://www.iana.org/assignments/media-types/\nCodeMirror.defineMIME(\"application/vnd.coffeescript\", \"coffeescript\");\n\nCodeMirror.defineMIME(\"text/x-coffeescript\", \"coffeescript\");\nCodeMirror.defineMIME(\"text/coffeescript\", \"coffeescript\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{\\{/, push: \"handlebars_raw\", token: \"tag\" },\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars_raw: [\n      { regex: /\\}\\}\\}/, pop: true, token: \"tag\" },\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: /\\}\\}\\}?/, mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"sass\", function(config) {\n  var cssMode = CodeMirror.mimeModes[\"text/css\"];\n  var propertyKeywords = cssMode.propertyKeywords || {},\n      colorKeywords = cssMode.colorKeywords || {},\n      valueKeywords = cssMode.valueKeywords || {},\n      fontProperties = cssMode.fontProperties || {};\n\n  function tokenRegexp(words) {\n    return new RegExp(\"^\" + words.join(\"|\"));\n  }\n\n  var keywords = [\"true\", \"false\", \"null\", \"auto\"];\n  var keywordsRegexp = new RegExp(\"^\" + keywords.join(\"|\"));\n\n  var operators = [\"\\\\(\", \"\\\\)\", \"=\", \">\", \"<\", \"==\", \">=\", \"<=\", \"\\\\+\", \"-\",\n                   \"\\\\!=\", \"/\", \"\\\\*\", \"%\", \"and\", \"or\", \"not\", \";\",\"\\\\{\",\"\\\\}\",\":\"];\n  var opRegexp = tokenRegexp(operators);\n\n  var pseudoElementsRegexp = /^::?[a-zA-Z_][\\w\\-]*/;\n\n  var word;\n\n  function isEndLine(stream) {\n    return !stream.peek() || stream.match(/\\s+$/, false);\n  }\n\n  function urlTokens(stream, state) {\n    var ch = stream.peek();\n\n    if (ch === \")\") {\n      stream.next();\n      state.tokenizer = tokenBase;\n      return \"operator\";\n    } else if (ch === \"(\") {\n      stream.next();\n      stream.eatSpace();\n\n      return \"operator\";\n    } else if (ch === \"'\" || ch === '\"') {\n      state.tokenizer = buildStringTokenizer(stream.next());\n      return \"string\";\n    } else {\n      state.tokenizer = buildStringTokenizer(\")\", false);\n      return \"string\";\n    }\n  }\n  function comment(indentation, multiLine) {\n    return function(stream, state) {\n      if (stream.sol() && stream.indentation() <= indentation) {\n        state.tokenizer = tokenBase;\n        return tokenBase(stream, state);\n      }\n\n      if (multiLine && stream.skipTo(\"*/\")) {\n        stream.next();\n        stream.next();\n        state.tokenizer = tokenBase;\n      } else {\n        stream.skipToEnd();\n      }\n\n      return \"comment\";\n    };\n  }\n\n  function buildStringTokenizer(quote, greedy) {\n    if (greedy == null) { greedy = true; }\n\n    function stringTokenizer(stream, state) {\n      var nextChar = stream.next();\n      var peekChar = stream.peek();\n      var previousChar = stream.string.charAt(stream.pos-2);\n\n      var endingString = ((nextChar !== \"\\\\\" && peekChar === quote) || (nextChar === quote && previousChar !== \"\\\\\"));\n\n      if (endingString) {\n        if (nextChar !== quote && greedy) { stream.next(); }\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        state.tokenizer = tokenBase;\n        return \"string\";\n      } else if (nextChar === \"#\" && peekChar === \"{\") {\n        state.tokenizer = buildInterpolationTokenizer(stringTokenizer);\n        stream.next();\n        return \"operator\";\n      } else {\n        return \"string\";\n      }\n    }\n\n    return stringTokenizer;\n  }\n\n  function buildInterpolationTokenizer(currentTokenizer) {\n    return function(stream, state) {\n      if (stream.peek() === \"}\") {\n        stream.next();\n        state.tokenizer = currentTokenizer;\n        return \"operator\";\n      } else {\n        return tokenBase(stream, state);\n      }\n    };\n  }\n\n  function indent(state) {\n    if (state.indentCount == 0) {\n      state.indentCount++;\n      var lastScopeOffset = state.scopes[0].offset;\n      var currentOffset = lastScopeOffset + config.indentUnit;\n      state.scopes.unshift({ offset:currentOffset });\n    }\n  }\n\n  function dedent(state) {\n    if (state.scopes.length == 1) return;\n\n    state.scopes.shift();\n  }\n\n  function tokenBase(stream, state) {\n    var ch = stream.peek();\n\n    // Comment\n    if (stream.match(\"/*\")) {\n      state.tokenizer = comment(stream.indentation(), true);\n      return state.tokenizer(stream, state);\n    }\n    if (stream.match(\"//\")) {\n      state.tokenizer = comment(stream.indentation(), false);\n      return state.tokenizer(stream, state);\n    }\n\n    // Interpolation\n    if (stream.match(\"#{\")) {\n      state.tokenizer = buildInterpolationTokenizer(tokenBase);\n      return \"operator\";\n    }\n\n    // Strings\n    if (ch === '\"' || ch === \"'\") {\n      stream.next();\n      state.tokenizer = buildStringTokenizer(ch);\n      return \"string\";\n    }\n\n    if(!state.cursorHalf){// state.cursorHalf === 0\n    // first half i.e. before : for key-value pairs\n    // including selectors\n\n      if (ch === \"-\") {\n        if (stream.match(/^-\\w+-/)) {\n          return \"meta\";\n        }\n      }\n\n      if (ch === \".\") {\n        stream.next();\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"qualifier\";\n        } else if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if (ch === \"#\") {\n        stream.next();\n        // ID selectors\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"builtin\";\n        }\n        if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"variable-2\";\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/))\n        return \"number\";\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/))\n        return \"unit\";\n\n      if (stream.match(keywordsRegexp))\n        return \"keyword\";\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        return \"atom\";\n      }\n\n      if (ch === \"=\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^=[\\w-]+/)) {\n          indent(state);\n          return \"meta\";\n        }\n      }\n\n      if (ch === \"+\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^\\+[\\w-]+/)){\n          return \"variable-3\";\n        }\n      }\n\n      if(ch === \"@\"){\n        if(stream.match(/@extend/)){\n          if(!stream.match(/\\s*[\\w]/))\n            dedent(state);\n        }\n      }\n\n\n      // Indent Directives\n      if (stream.match(/^@(else if|if|media|else|for|each|while|mixin|function)/)) {\n        indent(state);\n        return \"def\";\n      }\n\n      // Other Directives\n      if (ch === \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"def\";\n      }\n\n      if (stream.eatWhile(/[\\w-]/)){\n        if(stream.match(/ *: *[\\w-\\+\\$#!\\(\"']/,false)){\n          word = stream.current().toLowerCase();\n          var prop = state.prevProp + \"-\" + word;\n          if (propertyKeywords.hasOwnProperty(prop)) {\n            return \"property\";\n          } else if (propertyKeywords.hasOwnProperty(word)) {\n            state.prevProp = word;\n            return \"property\";\n          } else if (fontProperties.hasOwnProperty(word)) {\n            return \"property\";\n          }\n          return \"tag\";\n        }\n        else if(stream.match(/ *:/,false)){\n          indent(state);\n          state.cursorHalf = 1;\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        }\n        else if(stream.match(/ *,/,false)){\n          return \"tag\";\n        }\n        else{\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if(ch === \":\"){\n        if (stream.match(pseudoElementsRegexp)){ // could be a pseudo-element\n          return \"variable-3\";\n        }\n        stream.next();\n        state.cursorHalf=1;\n        return \"operator\";\n      }\n\n    } // cursorHalf===0 ends here\n    else{\n\n      if (ch === \"#\") {\n        stream.next();\n        // Hex numbers\n        if (stream.match(/[0-9a-fA-F]{6}|[0-9a-fA-F]{3}/)){\n          if (isEndLine(stream)) {\n            state.cursorHalf = 0;\n          }\n          return \"number\";\n        }\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"number\";\n      }\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"unit\";\n      }\n\n      if (stream.match(keywordsRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"keyword\";\n      }\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"atom\";\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"variable-2\";\n      }\n\n      // bang character for !important, !default, etc.\n      if (ch === \"!\") {\n        stream.next();\n        state.cursorHalf = 0;\n        return stream.match(/^[\\w]+/) ? \"keyword\": \"operator\";\n      }\n\n      if (stream.match(opRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"operator\";\n      }\n\n      // attributes\n      if (stream.eatWhile(/[\\w-]/)) {\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        word = stream.current().toLowerCase();\n        if (valueKeywords.hasOwnProperty(word)) {\n          return \"atom\";\n        } else if (colorKeywords.hasOwnProperty(word)) {\n          return \"keyword\";\n        } else if (propertyKeywords.hasOwnProperty(word)) {\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        } else {\n          return \"tag\";\n        }\n      }\n\n      //stream.eatSpace();\n      if (isEndLine(stream)) {\n        state.cursorHalf = 0;\n        return null;\n      }\n\n    } // else ends here\n\n    if (stream.match(opRegexp))\n      return \"operator\";\n\n    // If we haven't returned by now, we move 1 character\n    // and return an error\n    stream.next();\n    return null;\n  }\n\n  function tokenLexer(stream, state) {\n    if (stream.sol()) state.indentCount = 0;\n    var style = state.tokenizer(stream, state);\n    var current = stream.current();\n\n    if (current === \"@return\" || current === \"}\"){\n      dedent(state);\n    }\n\n    if (style !== null) {\n      var startOfToken = stream.pos - current.length;\n\n      var withCurrentIndent = startOfToken + (config.indentUnit * state.indentCount);\n\n      var newScopes = [];\n\n      for (var i = 0; i < state.scopes.length; i++) {\n        var scope = state.scopes[i];\n\n        if (scope.offset <= withCurrentIndent)\n          newScopes.push(scope);\n      }\n\n      state.scopes = newScopes;\n    }\n\n\n    return style;\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenizer: tokenBase,\n        scopes: [{offset: 0, type: \"sass\"}],\n        indentCount: 0,\n        cursorHalf: 0,  // cursor half tells us if cursor lies after (1)\n                        // or before (0) colon (well... more or less)\n        definedVars: [],\n        definedMixins: []\n      };\n    },\n    token: function(stream, state) {\n      var style = tokenLexer(stream, state);\n\n      state.lastToken = { style: style, content: stream.current() };\n\n      return style;\n    },\n\n    indent: function(state) {\n      return state.scopes[0].offset;\n    }\n  };\n}, \"css\");\n\nCodeMirror.defineMIME(\"text/x-sass\", \"sass\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  \"use strict\";\n  if (typeof exports === \"object\" && typeof module === \"object\") {// CommonJS\n    mod(require(\"../../lib/codemirror\"),\n        require(\"../../addon/mode/overlay\"),\n        require(\"../xml/xml\"),\n        require(\"../javascript/javascript\"),\n        require(\"../coffeescript/coffeescript\"),\n        require(\"../css/css\"),\n        require(\"../sass/sass\"),\n        require(\"../stylus/stylus\"),\n        require(\"../pug/pug\"),\n        require(\"../handlebars/handlebars\"));\n  } else if (typeof define === \"function\" && define.amd) { // AMD\n    define([\"../../lib/codemirror\",\n            \"../../addon/mode/overlay\",\n            \"../xml/xml\",\n            \"../javascript/javascript\",\n            \"../coffeescript/coffeescript\",\n            \"../css/css\",\n            \"../sass/sass\",\n            \"../stylus/stylus\",\n            \"../pug/pug\",\n            \"../handlebars/handlebars\"], mod);\n  } else { // Plain browser env\n    mod(CodeMirror);\n  }\n})(function (CodeMirror) {\n  var tagLanguages = {\n    script: [\n      [\"lang\", /coffee(script)?/, \"coffeescript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?coffee(?:script)?$/, \"coffeescript\"],\n      [\"lang\", /^babel$/, \"javascript\"],\n      [\"type\", /^text\\/babel$/, \"javascript\"],\n      [\"type\", /^text\\/ecmascript-\\d+$/, \"javascript\"]\n    ],\n    style: [\n      [\"lang\", /^stylus$/i, \"stylus\"],\n      [\"lang\", /^sass$/i, \"sass\"],\n      [\"lang\", /^less$/i, \"text/x-less\"],\n      [\"lang\", /^scss$/i, \"text/x-scss\"],\n      [\"type\", /^(text\\/)?(x-)?styl(us)?$/i, \"stylus\"],\n      [\"type\", /^text\\/sass/i, \"sass\"],\n      [\"type\", /^(text\\/)?(x-)?scss$/i, \"text/x-scss\"],\n      [\"type\", /^(text\\/)?(x-)?less$/i, \"text/x-less\"]\n    ],\n    template: [\n      [\"lang\", /^vue-template$/i, \"vue\"],\n      [\"lang\", /^pug$/i, \"pug\"],\n      [\"lang\", /^handlebars$/i, \"handlebars\"],\n      [\"type\", /^(text\\/)?(x-)?pug$/i, \"pug\"],\n      [\"type\", /^text\\/x-handlebars-template$/i, \"handlebars\"],\n      [null, null, \"vue-template\"]\n    ]\n  };\n\n  CodeMirror.defineMode(\"vue-template\", function (config, parserConfig) {\n    var mustacheOverlay = {\n      token: function (stream) {\n        if (stream.match(/^\\{\\{.*?\\}\\}/)) return \"meta mustache\";\n        while (stream.next() && !stream.match(\"{{\", false)) {}\n        return null;\n      }\n    };\n    return CodeMirror.overlayMode(CodeMirror.getMode(config, parserConfig.backdrop || \"text/html\"), mustacheOverlay);\n  });\n\n  CodeMirror.defineMode(\"vue\", function (config) {\n    return CodeMirror.getMode(config, {name: \"htmlmixed\", tags: tagLanguages});\n  }, \"htmlmixed\", \"xml\", \"javascript\", \"coffeescript\", \"css\", \"sass\", \"stylus\", \"pug\", \"handlebars\");\n\n  CodeMirror.defineMIME(\"script/x-vue\", \"vue\");\n  CodeMirror.defineMIME(\"text/x-vue\", \"vue\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n"],"sourceRoot":""}