{"version":3,"sources":["webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/xml/xml.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/meta.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/markdown/markdown.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","quote","closure","baseState","tagName","tagStart","test","eol","isInAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","modeInfo","mime","mode","ext","mimes","file","alias","i","info","findModeByMIME","toLowerCase","j","findModeByExtension","findModeByFileName","filename","dot","lastIndexOf","substring","findModeByName","cmCfg","modeCfg","getMode","htmlModeMissing","undefined","highlightFormatting","maxBlockquoteDepth","taskLists","strikethrough","emoji","fencedCodeBlockHighlighting","xml","tokenTypeOverrides","tokenTypes","header","code","list1","list2","list3","hr","image","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","em","strong","tokenType","hrRE","listRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","linkDefRE","punctuation","switchInline","f","inline","switchBlock","block","blankLine","linkTitle","indentedCode","htmlBlock","exit","inner","innerMode","htmlState","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","line","firstTokenOnLine","prevLineLineIsEmpty","string","prevLineIsIndentedCode","prevLineIsHr","prevLineIsList","list","maxNonCodeIndentation","listStack","lineIndentation","indentationDiff","pop","allowsInlineContinuation","fencedCodeEnd","isHr","skipToEnd","getType","setext","listType","taskList","fencedEndRE","RegExp","localMode","found","localState","local","lookAhead","charAt","peek","footnoteLink","md_inside","indexOf","returnType","currListInd","hasExitedList","maxFencedEndInd","styles","taskOpen","join","taskClosed","listMod","handleText","text","matchCh","regex","replace","previousFormatting","count","t","formattingEscape","end","pos","atts","start","backUp","len","before","after","leftFlanking","rightFlanking","setEm","setStrong","retType","endChar","returnState","linkRE","footnoteLinkInside","footnoteUrl","copyState","s","slice","closeBrackets","fold"],"mappings":"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","file":"4.netlify-cms-widget-code.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.modeInfo = [\n    {name: \"APL\", mime: \"text/apl\", mode: \"apl\", ext: [\"dyalog\", \"apl\"]},\n    {name: \"PGP\", mimes: [\"application/pgp\", \"application/pgp-encrypted\", \"application/pgp-keys\", \"application/pgp-signature\"], mode: \"asciiarmor\", ext: [\"asc\", \"pgp\", \"sig\"]},\n    {name: \"ASN.1\", mime: \"text/x-ttcn-asn\", mode: \"asn.1\", ext: [\"asn\", \"asn1\"]},\n    {name: \"Asterisk\", mime: \"text/x-asterisk\", mode: \"asterisk\", file: /^extensions\\.conf$/i},\n    {name: \"Brainfuck\", mime: \"text/x-brainfuck\", mode: \"brainfuck\", ext: [\"b\", \"bf\"]},\n    {name: \"C\", mime: \"text/x-csrc\", mode: \"clike\", ext: [\"c\", \"h\", \"ino\"]},\n    {name: \"C++\", mime: \"text/x-c++src\", mode: \"clike\", ext: [\"cpp\", \"c++\", \"cc\", \"cxx\", \"hpp\", \"h++\", \"hh\", \"hxx\"], alias: [\"cpp\"]},\n    {name: \"Cobol\", mime: \"text/x-cobol\", mode: \"cobol\", ext: [\"cob\", \"cpy\"]},\n    {name: \"C#\", mime: \"text/x-csharp\", mode: \"clike\", ext: [\"cs\"], alias: [\"csharp\", \"cs\"]},\n    {name: \"Clojure\", mime: \"text/x-clojure\", mode: \"clojure\", ext: [\"clj\", \"cljc\", \"cljx\"]},\n    {name: \"ClojureScript\", mime: \"text/x-clojurescript\", mode: \"clojure\", ext: [\"cljs\"]},\n    {name: \"Closure Stylesheets (GSS)\", mime: \"text/x-gss\", mode: \"css\", ext: [\"gss\"]},\n    {name: \"CMake\", mime: \"text/x-cmake\", mode: \"cmake\", ext: [\"cmake\", \"cmake.in\"], file: /^CMakeLists.txt$/},\n    {name: \"CoffeeScript\", mimes: [\"application/vnd.coffeescript\", \"text/coffeescript\", \"text/x-coffeescript\"], mode: \"coffeescript\", ext: [\"coffee\"], alias: [\"coffee\", \"coffee-script\"]},\n    {name: \"Common Lisp\", mime: \"text/x-common-lisp\", mode: \"commonlisp\", ext: [\"cl\", \"lisp\", \"el\"], alias: [\"lisp\"]},\n    {name: \"Cypher\", mime: \"application/x-cypher-query\", mode: \"cypher\", ext: [\"cyp\", \"cypher\"]},\n    {name: \"Cython\", mime: \"text/x-cython\", mode: \"python\", ext: [\"pyx\", \"pxd\", \"pxi\"]},\n    {name: \"Crystal\", mime: \"text/x-crystal\", mode: \"crystal\", ext: [\"cr\"]},\n    {name: \"CSS\", mime: \"text/css\", mode: \"css\", ext: [\"css\"]},\n    {name: \"CQL\", mime: \"text/x-cassandra\", mode: \"sql\", ext: [\"cql\"]},\n    {name: \"D\", mime: \"text/x-d\", mode: \"d\", ext: [\"d\"]},\n    {name: \"Dart\", mimes: [\"application/dart\", \"text/x-dart\"], mode: \"dart\", ext: [\"dart\"]},\n    {name: \"diff\", mime: \"text/x-diff\", mode: \"diff\", ext: [\"diff\", \"patch\"]},\n    {name: \"Django\", mime: \"text/x-django\", mode: \"django\"},\n    {name: \"Dockerfile\", mime: \"text/x-dockerfile\", mode: \"dockerfile\", file: /^Dockerfile$/},\n    {name: \"DTD\", mime: \"application/xml-dtd\", mode: \"dtd\", ext: [\"dtd\"]},\n    {name: \"Dylan\", mime: \"text/x-dylan\", mode: \"dylan\", ext: [\"dylan\", \"dyl\", \"intr\"]},\n    {name: \"EBNF\", mime: \"text/x-ebnf\", mode: \"ebnf\"},\n    {name: \"ECL\", mime: \"text/x-ecl\", mode: \"ecl\", ext: [\"ecl\"]},\n    {name: \"edn\", mime: \"application/edn\", mode: \"clojure\", ext: [\"edn\"]},\n    {name: \"Eiffel\", mime: \"text/x-eiffel\", mode: \"eiffel\", ext: [\"e\"]},\n    {name: \"Elm\", mime: \"text/x-elm\", mode: \"elm\", ext: [\"elm\"]},\n    {name: \"Embedded Javascript\", mime: \"application/x-ejs\", mode: \"htmlembedded\", ext: [\"ejs\"]},\n    {name: \"Embedded Ruby\", mime: \"application/x-erb\", mode: \"htmlembedded\", ext: [\"erb\"]},\n    {name: \"Erlang\", mime: \"text/x-erlang\", mode: \"erlang\", ext: [\"erl\"]},\n    {name: \"Esper\", mime: \"text/x-esper\", mode: \"sql\"},\n    {name: \"Factor\", mime: \"text/x-factor\", mode: \"factor\", ext: [\"factor\"]},\n    {name: \"FCL\", mime: \"text/x-fcl\", mode: \"fcl\"},\n    {name: \"Forth\", mime: \"text/x-forth\", mode: \"forth\", ext: [\"forth\", \"fth\", \"4th\"]},\n    {name: \"Fortran\", mime: \"text/x-fortran\", mode: \"fortran\", ext: [\"f\", \"for\", \"f77\", \"f90\", \"f95\"]},\n    {name: \"F#\", mime: \"text/x-fsharp\", mode: \"mllike\", ext: [\"fs\"], alias: [\"fsharp\"]},\n    {name: \"Gas\", mime: \"text/x-gas\", mode: \"gas\", ext: [\"s\"]},\n    {name: \"Gherkin\", mime: \"text/x-feature\", mode: \"gherkin\", ext: [\"feature\"]},\n    {name: \"GitHub Flavored Markdown\", mime: \"text/x-gfm\", mode: \"gfm\", file: /^(readme|contributing|history).md$/i},\n    {name: \"Go\", mime: \"text/x-go\", mode: \"go\", ext: [\"go\"]},\n    {name: \"Groovy\", mime: \"text/x-groovy\", mode: \"groovy\", ext: [\"groovy\", \"gradle\"], file: /^Jenkinsfile$/},\n    {name: \"HAML\", mime: \"text/x-haml\", mode: \"haml\", ext: [\"haml\"]},\n    {name: \"Haskell\", mime: \"text/x-haskell\", mode: \"haskell\", ext: [\"hs\"]},\n    {name: \"Haskell (Literate)\", mime: \"text/x-literate-haskell\", mode: \"haskell-literate\", ext: [\"lhs\"]},\n    {name: \"Haxe\", mime: \"text/x-haxe\", mode: \"haxe\", ext: [\"hx\"]},\n    {name: \"HXML\", mime: \"text/x-hxml\", mode: \"haxe\", ext: [\"hxml\"]},\n    {name: \"ASP.NET\", mime: \"application/x-aspx\", mode: \"htmlembedded\", ext: [\"aspx\"], alias: [\"asp\", \"aspx\"]},\n    {name: \"HTML\", mime: \"text/html\", mode: \"htmlmixed\", ext: [\"html\", \"htm\", \"handlebars\", \"hbs\"], alias: [\"xhtml\"]},\n    {name: \"HTTP\", mime: \"message/http\", mode: \"http\"},\n    {name: \"IDL\", mime: \"text/x-idl\", mode: \"idl\", ext: [\"pro\"]},\n    {name: \"Pug\", mime: \"text/x-pug\", mode: \"pug\", ext: [\"jade\", \"pug\"], alias: [\"jade\"]},\n    {name: \"Java\", mime: \"text/x-java\", mode: \"clike\", ext: [\"java\"]},\n    {name: \"Java Server Pages\", mime: \"application/x-jsp\", mode: \"htmlembedded\", ext: [\"jsp\"], alias: [\"jsp\"]},\n    {name: \"JavaScript\", mimes: [\"text/javascript\", \"text/ecmascript\", \"application/javascript\", \"application/x-javascript\", \"application/ecmascript\"],\n     mode: \"javascript\", ext: [\"js\"], alias: [\"ecmascript\", \"js\", \"node\"]},\n    {name: \"JSON\", mimes: [\"application/json\", \"application/x-json\"], mode: \"javascript\", ext: [\"json\", \"map\"], alias: [\"json5\"]},\n    {name: \"JSON-LD\", mime: \"application/ld+json\", mode: \"javascript\", ext: [\"jsonld\"], alias: [\"jsonld\"]},\n    {name: \"JSX\", mime: \"text/jsx\", mode: \"jsx\", ext: [\"jsx\"]},\n    {name: \"Jinja2\", mime: \"text/jinja2\", mode: \"jinja2\", ext: [\"j2\", \"jinja\", \"jinja2\"]},\n    {name: \"Julia\", mime: \"text/x-julia\", mode: \"julia\", ext: [\"jl\"]},\n    {name: \"Kotlin\", mime: \"text/x-kotlin\", mode: \"clike\", ext: [\"kt\"]},\n    {name: \"LESS\", mime: \"text/x-less\", mode: \"css\", ext: [\"less\"]},\n    {name: \"LiveScript\", mime: \"text/x-livescript\", mode: \"livescript\", ext: [\"ls\"], alias: [\"ls\"]},\n    {name: \"Lua\", mime: \"text/x-lua\", mode: \"lua\", ext: [\"lua\"]},\n    {name: \"Markdown\", mime: \"text/x-markdown\", mode: \"markdown\", ext: [\"markdown\", \"md\", \"mkd\"]},\n    {name: \"mIRC\", mime: \"text/mirc\", mode: \"mirc\"},\n    {name: \"MariaDB SQL\", mime: \"text/x-mariadb\", mode: \"sql\"},\n    {name: \"Mathematica\", mime: \"text/x-mathematica\", mode: \"mathematica\", ext: [\"m\", \"nb\", \"wl\", \"wls\"]},\n    {name: \"Modelica\", mime: \"text/x-modelica\", mode: \"modelica\", ext: [\"mo\"]},\n    {name: \"MUMPS\", mime: \"text/x-mumps\", mode: \"mumps\", ext: [\"mps\"]},\n    {name: \"MS SQL\", mime: \"text/x-mssql\", mode: \"sql\"},\n    {name: \"mbox\", mime: \"application/mbox\", mode: \"mbox\", ext: [\"mbox\"]},\n    {name: \"MySQL\", mime: \"text/x-mysql\", mode: \"sql\"},\n    {name: \"Nginx\", mime: \"text/x-nginx-conf\", mode: \"nginx\", file: /nginx.*\\.conf$/i},\n    {name: \"NSIS\", mime: \"text/x-nsis\", mode: \"nsis\", ext: [\"nsh\", \"nsi\"]},\n    {name: \"NTriples\", mimes: [\"application/n-triples\", \"application/n-quads\", \"text/n-triples\"],\n     mode: \"ntriples\", ext: [\"nt\", \"nq\"]},\n    {name: \"Objective-C\", mime: \"text/x-objectivec\", mode: \"clike\", ext: [\"m\"], alias: [\"objective-c\", \"objc\"]},\n    {name: \"Objective-C++\", mime: \"text/x-objectivec++\", mode: \"clike\", ext: [\"mm\"], alias: [\"objective-c++\", \"objc++\"]},\n    {name: \"OCaml\", mime: \"text/x-ocaml\", mode: \"mllike\", ext: [\"ml\", \"mli\", \"mll\", \"mly\"]},\n    {name: \"Octave\", mime: \"text/x-octave\", mode: \"octave\", ext: [\"m\"]},\n    {name: \"Oz\", mime: \"text/x-oz\", mode: \"oz\", ext: [\"oz\"]},\n    {name: \"Pascal\", mime: \"text/x-pascal\", mode: \"pascal\", ext: [\"p\", \"pas\"]},\n    {name: \"PEG.js\", mime: \"null\", mode: \"pegjs\", ext: [\"jsonld\"]},\n    {name: \"Perl\", mime: \"text/x-perl\", mode: \"perl\", ext: [\"pl\", \"pm\"]},\n    {name: \"PHP\", mimes: [\"text/x-php\", \"application/x-httpd-php\", \"application/x-httpd-php-open\"], mode: \"php\", ext: [\"php\", \"php3\", \"php4\", \"php5\", \"php7\", \"phtml\"]},\n    {name: \"Pig\", mime: \"text/x-pig\", mode: \"pig\", ext: [\"pig\"]},\n    {name: \"Plain Text\", mime: \"text/plain\", mode: \"null\", ext: [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\"]},\n    {name: \"PLSQL\", mime: \"text/x-plsql\", mode: \"sql\", ext: [\"pls\"]},\n    {name: \"PostgreSQL\", mime: \"text/x-pgsql\", mode: \"sql\"},\n    {name: \"PowerShell\", mime: \"application/x-powershell\", mode: \"powershell\", ext: [\"ps1\", \"psd1\", \"psm1\"]},\n    {name: \"Properties files\", mime: \"text/x-properties\", mode: \"properties\", ext: [\"properties\", \"ini\", \"in\"], alias: [\"ini\", \"properties\"]},\n    {name: \"ProtoBuf\", mime: \"text/x-protobuf\", mode: \"protobuf\", ext: [\"proto\"]},\n    {name: \"Python\", mime: \"text/x-python\", mode: \"python\", ext: [\"BUILD\", \"bzl\", \"py\", \"pyw\"], file: /^(BUCK|BUILD)$/},\n    {name: \"Puppet\", mime: \"text/x-puppet\", mode: \"puppet\", ext: [\"pp\"]},\n    {name: \"Q\", mime: \"text/x-q\", mode: \"q\", ext: [\"q\"]},\n    {name: \"R\", mime: \"text/x-rsrc\", mode: \"r\", ext: [\"r\", \"R\"], alias: [\"rscript\"]},\n    {name: \"reStructuredText\", mime: \"text/x-rst\", mode: \"rst\", ext: [\"rst\"], alias: [\"rst\"]},\n    {name: \"RPM Changes\", mime: \"text/x-rpm-changes\", mode: \"rpm\"},\n    {name: \"RPM Spec\", mime: \"text/x-rpm-spec\", mode: \"rpm\", ext: [\"spec\"]},\n    {name: \"Ruby\", mime: \"text/x-ruby\", mode: \"ruby\", ext: [\"rb\"], alias: [\"jruby\", \"macruby\", \"rake\", \"rb\", \"rbx\"]},\n    {name: \"Rust\", mime: \"text/x-rustsrc\", mode: \"rust\", ext: [\"rs\"]},\n    {name: \"SAS\", mime: \"text/x-sas\", mode: \"sas\", ext: [\"sas\"]},\n    {name: \"Sass\", mime: \"text/x-sass\", mode: \"sass\", ext: [\"sass\"]},\n    {name: \"Scala\", mime: \"text/x-scala\", mode: \"clike\", ext: [\"scala\"]},\n    {name: \"Scheme\", mime: \"text/x-scheme\", mode: \"scheme\", ext: [\"scm\", \"ss\"]},\n    {name: \"SCSS\", mime: \"text/x-scss\", mode: \"css\", ext: [\"scss\"]},\n    {name: \"Shell\", mimes: [\"text/x-sh\", \"application/x-sh\"], mode: \"shell\", ext: [\"sh\", \"ksh\", \"bash\"], alias: [\"bash\", \"sh\", \"zsh\"], file: /^PKGBUILD$/},\n    {name: \"Sieve\", mime: \"application/sieve\", mode: \"sieve\", ext: [\"siv\", \"sieve\"]},\n    {name: \"Slim\", mimes: [\"text/x-slim\", \"application/x-slim\"], mode: \"slim\", ext: [\"slim\"]},\n    {name: \"Smalltalk\", mime: \"text/x-stsrc\", mode: \"smalltalk\", ext: [\"st\"]},\n    {name: \"Smarty\", mime: \"text/x-smarty\", mode: \"smarty\", ext: [\"tpl\"]},\n    {name: \"Solr\", mime: \"text/x-solr\", mode: \"solr\"},\n    {name: \"SML\", mime: \"text/x-sml\", mode: \"mllike\", ext: [\"sml\", \"sig\", \"fun\", \"smackspec\"]},\n    {name: \"Soy\", mime: \"text/x-soy\", mode: \"soy\", ext: [\"soy\"], alias: [\"closure template\"]},\n    {name: \"SPARQL\", mime: \"application/sparql-query\", mode: \"sparql\", ext: [\"rq\", \"sparql\"], alias: [\"sparul\"]},\n    {name: \"Spreadsheet\", mime: \"text/x-spreadsheet\", mode: \"spreadsheet\", alias: [\"excel\", \"formula\"]},\n    {name: \"SQL\", mime: \"text/x-sql\", mode: \"sql\", ext: [\"sql\"]},\n    {name: \"SQLite\", mime: \"text/x-sqlite\", mode: \"sql\"},\n    {name: \"Squirrel\", mime: \"text/x-squirrel\", mode: \"clike\", ext: [\"nut\"]},\n    {name: \"Stylus\", mime: \"text/x-styl\", mode: \"stylus\", ext: [\"styl\"]},\n    {name: \"Swift\", mime: \"text/x-swift\", mode: \"swift\", ext: [\"swift\"]},\n    {name: \"sTeX\", mime: \"text/x-stex\", mode: \"stex\"},\n    {name: \"LaTeX\", mime: \"text/x-latex\", mode: \"stex\", ext: [\"text\", \"ltx\", \"tex\"], alias: [\"tex\"]},\n    {name: \"SystemVerilog\", mime: \"text/x-systemverilog\", mode: \"verilog\", ext: [\"v\", \"sv\", \"svh\"]},\n    {name: \"Tcl\", mime: \"text/x-tcl\", mode: \"tcl\", ext: [\"tcl\"]},\n    {name: \"Textile\", mime: \"text/x-textile\", mode: \"textile\", ext: [\"textile\"]},\n    {name: \"TiddlyWiki \", mime: \"text/x-tiddlywiki\", mode: \"tiddlywiki\"},\n    {name: \"Tiki wiki\", mime: \"text/tiki\", mode: \"tiki\"},\n    {name: \"TOML\", mime: \"text/x-toml\", mode: \"toml\", ext: [\"toml\"]},\n    {name: \"Tornado\", mime: \"text/x-tornado\", mode: \"tornado\"},\n    {name: \"troff\", mime: \"text/troff\", mode: \"troff\", ext: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]},\n    {name: \"TTCN\", mime: \"text/x-ttcn\", mode: \"ttcn\", ext: [\"ttcn\", \"ttcn3\", \"ttcnpp\"]},\n    {name: \"TTCN_CFG\", mime: \"text/x-ttcn-cfg\", mode: \"ttcn-cfg\", ext: [\"cfg\"]},\n    {name: \"Turtle\", mime: \"text/turtle\", mode: \"turtle\", ext: [\"ttl\"]},\n    {name: \"TypeScript\", mime: \"application/typescript\", mode: \"javascript\", ext: [\"ts\"], alias: [\"ts\"]},\n    {name: \"TypeScript-JSX\", mime: \"text/typescript-jsx\", mode: \"jsx\", ext: [\"tsx\"], alias: [\"tsx\"]},\n    {name: \"Twig\", mime: \"text/x-twig\", mode: \"twig\"},\n    {name: \"Web IDL\", mime: \"text/x-webidl\", mode: \"webidl\", ext: [\"webidl\"]},\n    {name: \"VB.NET\", mime: \"text/x-vb\", mode: \"vb\", ext: [\"vb\"]},\n    {name: \"VBScript\", mime: \"text/vbscript\", mode: \"vbscript\", ext: [\"vbs\"]},\n    {name: \"Velocity\", mime: \"text/velocity\", mode: \"velocity\", ext: [\"vtl\"]},\n    {name: \"Verilog\", mime: \"text/x-verilog\", mode: \"verilog\", ext: [\"v\"]},\n    {name: \"VHDL\", mime: \"text/x-vhdl\", mode: \"vhdl\", ext: [\"vhd\", \"vhdl\"]},\n    {name: \"Vue.js Component\", mimes: [\"script/x-vue\", \"text/x-vue\"], mode: \"vue\", ext: [\"vue\"]},\n    {name: \"XML\", mimes: [\"application/xml\", \"text/xml\"], mode: \"xml\", ext: [\"xml\", \"xsl\", \"xsd\", \"svg\"], alias: [\"rss\", \"wsdl\", \"xsd\"]},\n    {name: \"XQuery\", mime: \"application/xquery\", mode: \"xquery\", ext: [\"xy\", \"xquery\"]},\n    {name: \"Yacas\", mime: \"text/x-yacas\", mode: \"yacas\", ext: [\"ys\"]},\n    {name: \"YAML\", mimes: [\"text/x-yaml\", \"text/yaml\"], mode: \"yaml\", ext: [\"yaml\", \"yml\"], alias: [\"yml\"]},\n    {name: \"Z80\", mime: \"text/x-z80\", mode: \"z80\", ext: [\"z80\"]},\n    {name: \"mscgen\", mime: \"text/x-mscgen\", mode: \"mscgen\", ext: [\"mscgen\", \"mscin\", \"msc\"]},\n    {name: \"xu\", mime: \"text/x-xu\", mode: \"mscgen\", ext: [\"xu\"]},\n    {name: \"msgenny\", mime: \"text/x-msgenny\", mode: \"mscgen\", ext: [\"msgenny\"]}\n  ];\n  // Ensure all modes have a mime property for backwards compatibility\n  for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n    var info = CodeMirror.modeInfo[i];\n    if (info.mimes) info.mime = info.mimes[0];\n  }\n\n  CodeMirror.findModeByMIME = function(mime) {\n    mime = mime.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.mime == mime) return info;\n      if (info.mimes) for (var j = 0; j < info.mimes.length; j++)\n        if (info.mimes[j] == mime) return info;\n    }\n    if (/\\+xml$/.test(mime)) return CodeMirror.findModeByMIME(\"application/xml\")\n    if (/\\+json$/.test(mime)) return CodeMirror.findModeByMIME(\"application/json\")\n  };\n\n  CodeMirror.findModeByExtension = function(ext) {\n    ext = ext.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.ext) for (var j = 0; j < info.ext.length; j++)\n        if (info.ext[j] == ext) return info;\n    }\n  };\n\n  CodeMirror.findModeByFileName = function(filename) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.file && info.file.test(filename)) return info;\n    }\n    var dot = filename.lastIndexOf(\".\");\n    var ext = dot > -1 && filename.substring(dot + 1, filename.length);\n    if (ext) return CodeMirror.findModeByExtension(ext);\n  };\n\n  CodeMirror.findModeByName = function(name) {\n    name = name.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.name.toLowerCase() == name) return info;\n      if (info.alias) for (var j = 0; j < info.alias.length; j++)\n        if (info.alias[j].toLowerCase() == name) return info;\n    }\n  };\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n  var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n  var htmlModeMissing = htmlMode.name == \"null\"\n\n  function getMode(name) {\n    if (CodeMirror.findModeByName) {\n      var found = CodeMirror.findModeByName(name);\n      if (found) name = found.mime || found.mimes[0];\n    }\n    var mode = CodeMirror.getMode(cmCfg, name);\n    return mode.name == \"null\" ? null : mode;\n  }\n\n  // Should characters that affect highlighting be highlighted separate?\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\n  if (modeCfg.highlightFormatting === undefined)\n    modeCfg.highlightFormatting = false;\n\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n  // Excess `>` will emit `error` token.\n  if (modeCfg.maxBlockquoteDepth === undefined)\n    modeCfg.maxBlockquoteDepth = 0;\n\n  // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n  // Turn on strikethrough syntax\n  if (modeCfg.strikethrough === undefined)\n    modeCfg.strikethrough = false;\n\n  if (modeCfg.emoji === undefined)\n    modeCfg.emoji = false;\n\n  if (modeCfg.fencedCodeBlockHighlighting === undefined)\n    modeCfg.fencedCodeBlockHighlighting = true;\n\n  if (modeCfg.xml === undefined)\n    modeCfg.xml = true;\n\n  // Allow token types to be overridden by user-provided token types.\n  if (modeCfg.tokenTypeOverrides === undefined)\n    modeCfg.tokenTypeOverrides = {};\n\n  var tokenTypes = {\n    header: \"header\",\n    code: \"comment\",\n    quote: \"quote\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    hr: \"hr\",\n    image: \"image\",\n    imageAltText: \"image-alt-text\",\n    imageMarker: \"image-marker\",\n    formatting: \"formatting\",\n    linkInline: \"link\",\n    linkEmail: \"link\",\n    linkText: \"link\",\n    linkHref: \"string\",\n    em: \"em\",\n    strong: \"strong\",\n    strikethrough: \"strikethrough\",\n    emoji: \"builtin\"\n  };\n\n  for (var tokenType in tokenTypes) {\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n    }\n  }\n\n  var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n  ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n  ,   taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n  ,   setextHeaderRE = /^ *(?:\\={1,}|-{1,})\\s*$/\n  ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/\n  ,   fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w+#-]*)[^\\n`]*$/\n  ,   linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n  ,   punctuation = /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n  ,   expandedTab = \"    \" // CommonMark specifies tab as 4 spaces\n\n  function switchInline(stream, state, f) {\n    state.f = state.inline = f;\n    return f(stream, state);\n  }\n\n  function switchBlock(stream, state, f) {\n    state.f = state.block = f;\n    return f(stream, state);\n  }\n\n  function lineIsEmpty(line) {\n    return !line || !/\\S/.test(line.string)\n  }\n\n  // Blocks\n\n  function blankLine(state) {\n    // Reset linkTitle state\n    state.linkTitle = false;\n    state.linkHref = false;\n    state.linkText = false;\n    // Reset EM state\n    state.em = false;\n    // Reset STRONG state\n    state.strong = false;\n    // Reset strikethrough state\n    state.strikethrough = false;\n    // Reset state.quote\n    state.quote = 0;\n    // Reset state.indentedCode\n    state.indentedCode = false;\n    if (state.f == htmlBlock) {\n      var exit = htmlModeMissing\n      if (!exit) {\n        var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n        exit = inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n          (!inner.state.context && inner.state.tokenize.isInText)\n      }\n      if (exit) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    // Reset state.trailingSpace\n    state.trailingSpace = 0;\n    state.trailingSpaceNewLine = false;\n    // Mark this line as blank\n    state.prevLine = state.thisLine\n    state.thisLine = {stream: null}\n    return null;\n  }\n\n  function blockNormal(stream, state) {\n    var firstTokenOnLine = stream.column() === state.indentation;\n    var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n    var prevLineIsIndentedCode = state.indentedCode;\n    var prevLineIsHr = state.prevLine.hr;\n    var prevLineIsList = state.list !== false;\n    var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n\n    state.indentedCode = false;\n\n    var lineIndentation = state.indentation;\n    // compute once per line (on first token)\n    if (state.indentationDiff === null) {\n      state.indentationDiff = state.indentation;\n      if (prevLineIsList) {\n        state.list = null;\n        // While this list item's marker's indentation is less than the deepest\n        //  list item's content's indentation,pop the deepest list item\n        //  indentation off the stack, and update block indentation state\n        while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n          state.listStack.pop();\n          if (state.listStack.length) {\n            state.indentation = state.listStack[state.listStack.length - 1];\n          // less than the first list's indent -> the line is no longer a list\n          } else {\n            state.list = false;\n          }\n        }\n        if (state.list !== false) {\n          state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\n        }\n      }\n    }\n\n    // not comprehensive (currently only for setext detection purposes)\n    var allowsInlineContinuation = (\n        !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\n        (!prevLineIsList || !prevLineIsIndentedCode) &&\n        !state.prevLine.fencedCodeEnd\n    );\n\n    var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\n      state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n\n    var match = null;\n    if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\n         state.prevLine.header || prevLineLineIsEmpty)) {\n      stream.skipToEnd();\n      state.indentedCode = true;\n      return tokenTypes.code;\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n      state.quote = 0;\n      state.header = match[1].length;\n      state.thisLine.header = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n      state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n      if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n      stream.eatSpace();\n      return getType(state);\n    } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n      var listType = match[1] ? \"ol\" : \"ul\";\n\n      state.indentation = lineIndentation + stream.current().length;\n      state.list = true;\n      state.quote = 0;\n\n      // Add this list item's content's indentation to the stack\n      state.listStack.push(state.indentation);\n      // Reset inline styles which shouldn't propagate aross list items\n      state.em = false;\n      state.strong = false;\n      state.code = false;\n      state.strikethrough = false;\n\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n        state.taskList = true;\n      }\n      state.f = state.inline;\n      if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n      return getType(state);\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n      state.quote = 0;\n      state.fencedEndRE = new RegExp(match[1] + \"+ *$\");\n      // try switching mode\n      state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2]);\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n      state.f = state.block = local;\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      state.code = -1\n      return getType(state);\n    // SETEXT has lowest block-scope precedence after HR, so check it after\n    //  the others (code, blockquote, list...)\n    } else if (\n      // if setext set, indicates line after ---/===\n      state.setext || (\n        // line before ---/===\n        (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\n        !state.code && !isHr && !linkDefRE.test(stream.string) &&\n        (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\n      )\n    ) {\n      if ( !state.setext ) {\n        state.header = match[0].charAt(0) == '=' ? 1 : 2;\n        state.setext = state.header;\n      } else {\n        state.header = state.setext;\n        // has no effect on type so we can reset it now\n        state.setext = 0;\n        stream.skipToEnd();\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      }\n      state.thisLine.header = true;\n      state.f = state.inline;\n      return getType(state);\n    } else if (isHr) {\n      stream.skipToEnd();\n      state.hr = true;\n      state.thisLine.hr = true;\n      return tokenTypes.hr;\n    } else if (stream.peek() === '[') {\n      return switchInline(stream, state, footnoteLink);\n    }\n\n    return switchInline(stream, state, state.inline);\n  }\n\n  function htmlBlock(stream, state) {\n    var style = htmlMode.token(stream, state.htmlState);\n    if (!htmlModeMissing) {\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n      if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\n          (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    return style;\n  }\n\n  function local(stream, state) {\n    var currListInd = state.listStack[state.listStack.length - 1] || 0;\n    var hasExitedList = state.indentation < currListInd;\n    var maxFencedEndInd = currListInd + 3;\n    if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      var returnType;\n      if (!hasExitedList) returnType = getType(state)\n      state.localMode = state.localState = null;\n      state.block = blockNormal;\n      state.f = inlineNormal;\n      state.fencedEndRE = null;\n      state.code = 0\n      state.thisLine.fencedCodeEnd = true;\n      if (hasExitedList) return switchBlock(stream, state, state.block);\n      return returnType;\n    } else if (state.localMode) {\n      return state.localMode.token(stream, state.localState);\n    } else {\n      stream.skipToEnd();\n      return tokenTypes.code;\n    }\n  }\n\n  // Inline\n  function getType(state) {\n    var styles = [];\n\n    if (state.formatting) {\n      styles.push(tokenTypes.formatting);\n\n      if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n      for (var i = 0; i < state.formatting.length; i++) {\n        styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n        if (state.formatting[i] === \"header\") {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n        }\n\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n        // Add `error` instead if the maximum blockquote nesting depth is passed\n        if (state.formatting[i] === \"quote\") {\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n          } else {\n            styles.push(\"error\");\n          }\n        }\n      }\n    }\n\n    if (state.taskOpen) {\n      styles.push(\"meta\");\n      return styles.length ? styles.join(' ') : null;\n    }\n    if (state.taskClosed) {\n      styles.push(\"property\");\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    if (state.linkHref) {\n      styles.push(tokenTypes.linkHref, \"url\");\n    } else { // Only apply inline styles to non-url text\n      if (state.strong) { styles.push(tokenTypes.strong); }\n      if (state.em) { styles.push(tokenTypes.em); }\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n      if (state.emoji) { styles.push(tokenTypes.emoji); }\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\n      if (state.code) { styles.push(tokenTypes.code); }\n      if (state.image) { styles.push(tokenTypes.image); }\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n    }\n\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n    if (state.quote) {\n      styles.push(tokenTypes.quote);\n\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n        styles.push(tokenTypes.quote + \"-\" + state.quote);\n      } else {\n        styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n      }\n    }\n\n    if (state.list !== false) {\n      var listMod = (state.listStack.length - 1) % 3;\n      if (!listMod) {\n        styles.push(tokenTypes.list1);\n      } else if (listMod === 1) {\n        styles.push(tokenTypes.list2);\n      } else {\n        styles.push(tokenTypes.list3);\n      }\n    }\n\n    if (state.trailingSpaceNewLine) {\n      styles.push(\"trailing-space-new-line\");\n    } else if (state.trailingSpace) {\n      styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n    }\n\n    return styles.length ? styles.join(' ') : null;\n  }\n\n  function handleText(stream, state) {\n    if (stream.match(textRE, true)) {\n      return getType(state);\n    }\n    return undefined;\n  }\n\n  function inlineNormal(stream, state) {\n    var style = state.text(stream, state);\n    if (typeof style !== 'undefined')\n      return style;\n\n    if (state.list) { // List marker (*, +, -, 1., etc)\n      state.list = null;\n      return getType(state);\n    }\n\n    if (state.taskList) {\n      var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n      if (taskOpen) state.taskOpen = true;\n      else state.taskClosed = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"task\";\n      state.taskList = false;\n      return getType(state);\n    }\n\n    state.taskOpen = false;\n    state.taskClosed = false;\n\n    if (state.header && stream.match(/^#+$/, true)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      return getType(state);\n    }\n\n    var ch = stream.next();\n\n    // Matches link titles present on next line\n    if (state.linkTitle) {\n      state.linkTitle = false;\n      var matchCh = ch;\n      if (ch === '(') {\n        matchCh = ')';\n      }\n      matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n      var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n      if (stream.match(new RegExp(regex), true)) {\n        return tokenTypes.linkHref;\n      }\n    }\n\n    // If this block is changed, it may need to be updated in GFM mode\n    if (ch === '`') {\n      var previousFormatting = state.formatting;\n      if (modeCfg.highlightFormatting) state.formatting = \"code\";\n      stream.eatWhile('`');\n      var count = stream.current().length\n      if (state.code == 0 && (!state.quote || count == 1)) {\n        state.code = count\n        return getType(state)\n      } else if (count == state.code) { // Must be exact\n        var t = getType(state)\n        state.code = 0\n        return t\n      } else {\n        state.formatting = previousFormatting\n        return getType(state)\n      }\n    } else if (state.code) {\n      return getType(state);\n    }\n\n    if (ch === '\\\\') {\n      stream.next();\n      if (modeCfg.highlightFormatting) {\n        var type = getType(state);\n        var formattingEscape = tokenTypes.formatting + \"-escape\";\n        return type ? type + \" \" + formattingEscape : formattingEscape;\n      }\n    }\n\n    if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n      state.imageMarker = true;\n      state.image = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n      state.imageMarker = false;\n      state.imageAltText = true\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.imageAltText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      var type = getType(state);\n      state.imageAltText = false;\n      state.image = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '[' && !state.image) {\n      if (state.linkText && stream.match(/^.*?\\]/)) return getType(state)\n      state.linkText = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.linkText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      state.linkText = false;\n      state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal\n      return type;\n    }\n\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkEmail;\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^(!--|\\?|!\\[CDATA\\[|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*(?:>|$))/i, false)) {\n      var end = stream.string.indexOf(\">\", stream.pos);\n      if (end != -1) {\n        var atts = stream.string.substring(stream.start, end);\n        if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n      }\n      stream.backUp(1);\n      state.htmlState = CodeMirror.startState(htmlMode);\n      return switchBlock(stream, state, htmlBlock);\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n      state.md_inside = false;\n      return \"tag\";\n    } else if (ch === \"*\" || ch === \"_\") {\n      var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n      while (len < 3 && stream.eat(ch)) len++\n      var after = stream.peek() || \" \"\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n      var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n      var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n      var setEm = null, setStrong = null\n      if (len % 2) { // Em\n        if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setEm = true\n        else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setEm = false\n      }\n      if (len > 1) { // Strong\n        if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setStrong = true\n        else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setStrong = false\n      }\n      if (setStrong != null || setEm != null) {\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n        if (setEm === true) state.em = ch\n        if (setStrong === true) state.strong = ch\n        var t = getType(state)\n        if (setEm === false) state.em = false\n        if (setStrong === false) state.strong = false\n        return t\n      }\n    } else if (ch === ' ') {\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n          return getType(state);\n        } else { // Not surrounded by spaces, back up pointer\n          stream.backUp(1);\n        }\n      }\n    }\n\n    if (modeCfg.strikethrough) {\n      if (ch === '~' && stream.eatWhile(ch)) {\n        if (state.strikethrough) {// Remove strikethrough\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          var t = getType(state);\n          state.strikethrough = false;\n          return t;\n        } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n          state.strikethrough = true;\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          return getType(state);\n        }\n      } else if (ch === ' ') {\n        if (stream.match(/^~~/, true)) { // Probably surrounded by space\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(2);\n          }\n        }\n      }\n    }\n\n    if (modeCfg.emoji && ch === \":\" && stream.match(/^(?:[a-z_\\d+][a-z_\\d+-]*|\\-[a-z_\\d+][a-z_\\d+-]*):/)) {\n      state.emoji = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n      var retType = getType(state);\n      state.emoji = false;\n      return retType;\n    }\n\n    if (ch === ' ') {\n      if (stream.match(/^ +$/, false)) {\n        state.trailingSpace++;\n      } else if (state.trailingSpace) {\n        state.trailingSpaceNewLine = true;\n      }\n    }\n\n    return getType(state);\n  }\n\n  function linkInline(stream, state) {\n    var ch = stream.next();\n\n    if (ch === \">\") {\n      state.f = state.inline = inlineNormal;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    stream.match(/^[^>]+/, true);\n\n    return tokenTypes.linkInline;\n  }\n\n  function linkHref(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    var ch = stream.next();\n    if (ch === '(' || ch === '[') {\n      state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n      if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n      state.linkHref = true;\n      return getType(state);\n    }\n    return 'error';\n  }\n\n  var linkRE = {\n    \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n    \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n  }\n\n  function getLinkHrefInside(endChar) {\n    return function(stream, state) {\n      var ch = stream.next();\n\n      if (ch === endChar) {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        var returnState = getType(state);\n        state.linkHref = false;\n        return returnState;\n      }\n\n      stream.match(linkRE[endChar])\n      state.linkHref = true;\n      return getType(state);\n    };\n  }\n\n  function footnoteLink(stream, state) {\n    if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n      state.f = footnoteLinkInside;\n      stream.next(); // Consume [\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      state.linkText = true;\n      return getType(state);\n    }\n    return switchInline(stream, state, inlineNormal);\n  }\n\n  function footnoteLinkInside(stream, state) {\n    if (stream.match(/^\\]:/, true)) {\n      state.f = state.inline = footnoteUrl;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var returnType = getType(state);\n      state.linkText = false;\n      return returnType;\n    }\n\n    stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n    return tokenTypes.linkText;\n  }\n\n  function footnoteUrl(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    // Match URL\n    stream.match(/^[^\\s]+/, true);\n    // Check for link title\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\n      state.linkTitle = true;\n    } else { // More content on line, check if link title\n      stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?/, true);\n    }\n    state.f = state.inline = inlineNormal;\n    return tokenTypes.linkHref + \" url\";\n  }\n\n  var mode = {\n    startState: function() {\n      return {\n        f: blockNormal,\n\n        prevLine: {stream: null},\n        thisLine: {stream: null},\n\n        block: blockNormal,\n        htmlState: null,\n        indentation: 0,\n\n        inline: inlineNormal,\n        text: handleText,\n\n        formatting: false,\n        linkText: false,\n        linkHref: false,\n        linkTitle: false,\n        code: 0,\n        em: false,\n        strong: false,\n        header: 0,\n        setext: 0,\n        hr: false,\n        taskList: false,\n        list: false,\n        listStack: [],\n        quote: 0,\n        trailingSpace: 0,\n        trailingSpaceNewLine: false,\n        strikethrough: false,\n        emoji: false,\n        fencedEndRE: null\n      };\n    },\n\n    copyState: function(s) {\n      return {\n        f: s.f,\n\n        prevLine: s.prevLine,\n        thisLine: s.thisLine,\n\n        block: s.block,\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n        indentation: s.indentation,\n\n        localMode: s.localMode,\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n        inline: s.inline,\n        text: s.text,\n        formatting: false,\n        linkText: s.linkText,\n        linkTitle: s.linkTitle,\n        linkHref: s.linkHref,\n        code: s.code,\n        em: s.em,\n        strong: s.strong,\n        strikethrough: s.strikethrough,\n        emoji: s.emoji,\n        header: s.header,\n        setext: s.setext,\n        hr: s.hr,\n        taskList: s.taskList,\n        list: s.list,\n        listStack: s.listStack.slice(0),\n        quote: s.quote,\n        indentedCode: s.indentedCode,\n        trailingSpace: s.trailingSpace,\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\n        md_inside: s.md_inside,\n        fencedEndRE: s.fencedEndRE\n      };\n    },\n\n    token: function(stream, state) {\n\n      // Reset state.formatting\n      state.formatting = false;\n\n      if (stream != state.thisLine.stream) {\n        state.header = 0;\n        state.hr = false;\n\n        if (stream.match(/^\\s*$/, true)) {\n          blankLine(state);\n          return null;\n        }\n\n        state.prevLine = state.thisLine\n        state.thisLine = {stream: stream}\n\n        // Reset state.taskList\n        state.taskList = false;\n\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n\n        if (!state.localState) {\n          state.f = state.block;\n          if (state.f != htmlBlock) {\n            var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n            state.indentation = indentation;\n            state.indentationDiff = null;\n            if (indentation > 0) return null;\n          }\n        }\n      }\n      return state.f(stream, state);\n    },\n\n    innerMode: function(state) {\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n      if (state.localState) return {state: state.localState, mode: state.localMode};\n      return {state: state, mode: mode};\n    },\n\n    indent: function(state, textAfter, line) {\n      if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\n      if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\n      return CodeMirror.Pass\n    },\n\n    blankLine: blankLine,\n\n    getType: getType,\n\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"markdown\"\n  };\n  return mode;\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n});\n"],"sourceRoot":""}