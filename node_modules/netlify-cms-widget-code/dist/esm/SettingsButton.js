"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _react = _interopRequireDefault(require("react"));

var _netlifyCmsUiDefault = require("netlify-cms-ui-default");

var _core = require("@emotion/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const StyledSettingsButton = (0, _styledBase.default)("button", {
  target: "ehe71p20",
  label: "StyledSettingsButton"
})(_netlifyCmsUiDefault.buttons.button, ";", _netlifyCmsUiDefault.buttons.default, ";", _netlifyCmsUiDefault.shadows.drop, ";display:block;position:absolute;z-index:100;right:8px;top:8px;opacity:0.8;padding:2px 4px;line-height:1;height:auto;", _netlifyCmsUiDefault.Icon, "{position:relative;top:1px;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZXR0aW5nc0J1dHRvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJMEMiLCJmaWxlIjoiLi4vLi4vc3JjL1NldHRpbmdzQnV0dG9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IEljb24sIGJ1dHRvbnMsIHNoYWRvd3MgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcblxuY29uc3QgU3R5bGVkU2V0dGluZ3NCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxuICAke2J1dHRvbnMuYnV0dG9ufTtcbiAgJHtidXR0b25zLmRlZmF1bHR9O1xuICAke3NoYWRvd3MuZHJvcH07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwMDtcbiAgcmlnaHQ6IDhweDtcbiAgdG9wOiA4cHg7XG4gIG9wYWNpdHk6IDAuODtcbiAgcGFkZGluZzogMnB4IDRweDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGhlaWdodDogYXV0bztcblxuICAke0ljb259IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAxcHg7XG4gIH1cbmA7XG5cbmNvbnN0IFNldHRpbmdzQnV0dG9uID0gKHsgc2hvd0Nsb3NlLCBvbkNsaWNrIH0pID0+IChcbiAgPFN0eWxlZFNldHRpbmdzQnV0dG9uIG9uQ2xpY2s9e29uQ2xpY2t9PlxuICAgIDxJY29uIHR5cGU9e3Nob3dDbG9zZSA/ICdjbG9zZScgOiAnc2V0dGluZ3MnfSBzaXplPVwic21hbGxcIiAvPlxuICA8L1N0eWxlZFNldHRpbmdzQnV0dG9uPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgU2V0dGluZ3NCdXR0b247XG4iXX0= */"));

const SettingsButton = (_ref) => {
  let {
    showClose,
    onClick
  } = _ref;
  return (0, _core.jsx)(StyledSettingsButton, {
    onClick: onClick
  }, (0, _core.jsx)(_netlifyCmsUiDefault.Icon, {
    type: showClose ? 'close' : 'settings',
    size: "small"
  }));
};

var _default = SettingsButton;
exports.default = _default;